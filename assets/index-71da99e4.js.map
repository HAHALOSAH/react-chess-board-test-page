{"version":3,"file":"index-71da99e4.js","sources":["../../../react-chess-board/dist/index.esm.js","../../src/App.jsx","../../src/index.jsx"],"sourcesContent":["import { jsxs, jsx } from 'react/jsx-runtime';\nimport React from 'react';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\nvar Staunty = {\n    bB: (jsxs(\"svg\", Object.assign({ clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", textRendering: \"geometricPrecision\", version: \"1.1\", viewBox: \"0 0 50 50\", xmlns: \"http://www.w3.org/2000/svg\" }, { children: [jsx(\"path\", { d: \"m25 5.767c-2.1056 0-3.8124 0.87865-3.8121 1.9632l1.5166 2.6505c-16.049 14.089-5.707 27.135-5.707 27.135h16.006s7.0496-8.6714 0.76227-19.51l-2.989 4.8276c-0.67072 1.0833-1.9632 1.4898-2.898 0.91107-0.93477-0.57872-1.1472-1.917-0.47652-3.0003l3.8867-6.2771c-1.1073-1.3449-2.4252-2.7101-3.9926-4.0861l1.5166-2.6505c0-1.0846-1.7066-1.9632-3.8121-1.9632z\", style: { fill: \"#5f5955\", strokeLinejoin: \"round\", strokeWidth: 1.2, stroke: \"#1e1e1e\" } }), jsx(\"path\", { d: \"m25 5.767c-0.8164 0-1.5711 0.1335-2.1913 0.35847 4.3387 0.84718 4.9765 1.1195 2.5601 4.3506l3.246 3.5665c-3.6565 8.2403-1.6037 7.9919-1.6037 7.9919s0.6964-2.6485 4.1117-7.7689c-1.0722-1.2796-2.3377-2.578-3.8266-3.8851l1.5161-2.6501c1e-4 -1.0845-1.7067-1.9631-3.8123-1.9634zm8.7655 12.238-1.0091 1.5127c3.7363 8.4129-4.1347 17.997-4.1347 17.997h4.3815c0.1581 0.0339 6.958-8.8438 0.76227-19.51z\", style: { fill: \"#000000\", opacity: .18 } }), jsx(\"path\", { d: \"m15.145 31.721c-0.2191-0.0314-3.4233-9.7859 5.7543-18.751-2.3019 1.895-7.1351 13.163-5.7543 18.751z\", style: { fill: \"#ffffff\", opacity: .25 } }), jsx(\"path\", { d: \"m23.292 10.196-1.4772-2.5943s0.2425-0.72175 1.7808-1.0472c-1.7266 1.3502-0.988 1.6622-0.3036 3.6415z\", style: { fill: \"#ffffff\", opacity: .25 } }), jsx(\"path\", { d: \"m25 36.457s-9.1309 0.048-11.691 1.6192c-1.7273 1.0602-2.1348 3.6514-1.8998 6.3237h27.182c0.2349-2.6723-0.1726-5.2636-1.8999-6.3237-2.5597-1.5711-11.691-1.6192-11.691-1.6192z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#5f5955\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", strokeLinejoin: \"round\", strokeWidth: 1.2, stroke: \"#1e1e1e\" } }), jsx(\"path\", { d: \"m25 37.147s-8.7121-0.1374-11.624 1.6658c-0.3699 0.229-0.6993 0.8394-0.9536 1.3902 0.2607-0.3313 0.5021-0.6131 0.8866-0.8491 2.5598-1.5711 11.691-1.6191 11.691-1.6191s9.1318 0.048 11.692 1.6191c0.391 0.24 0.5924 0.5317 0.8556 0.8701 0.026-0.076-0.4084-1.1578-1.1438-1.5962-2.7554-1.492-11.403-1.4808-11.403-1.4808z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", opacity: .25, shapeRendering: \"geometricPrecision\" } })] }))),\n    bK: (jsxs(\"svg\", Object.assign({ clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", textRendering: \"geometricPrecision\", version: \"1.1\", viewBox: \"0 0 50 50\", xmlns: \"http://www.w3.org/2000/svg\", xmlnsXlink: \"http://www.w3.org/1999/xlink\" }, { children: [jsx(\"path\", { d: \"m27.67 15.225v-3.5436h4.4396v-4.4293h-4.9344v-3.8933h-4.366v3.8933h-4.9344v4.4293h4.4396v3.5436\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#5f5955\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", strokeLinecap: \"round\", strokeWidth: 1.2, stroke: \"#1e1e1e\" } }), jsx(\"rect\", { x: \"20.299\", y: \"14.215\", width: \"9.3984\", height: \"2.7873\", ry: \"1.3937\", style: { fill: \"#5f5955\", paintOrder: \"normal\", strokeLinejoin: \"round\", strokeWidth: 1.2, stroke: \"#1e1e1e\" } }), jsx(\"path\", { d: \"m26.416 14.215c0.72479 0 1.3082 0.62142 1.3082 1.3935 0 0.77209-0.58336 1.3935-1.3082 1.3935h1.9736c0.72478 0 1.3081-0.62144 1.3081-1.3935 0-0.77209-0.58336-1.3935-1.3081-1.3935z\", style: { fill: \"#000000\", opacity: .18, paintOrder: \"normal\" } }), jsx(\"path\", { d: \"m21.631 14.842c-0.40169 0-0.72499 0.34468-0.72499 0.77259 0 0.42787 0.3233 0.77227 0.72499 0.77227h0.87379c-0.40169 0-0.72499-0.3444-0.72499-0.77227 0-0.42791 0.3233-0.77259 0.72499-0.77259z\", style: { fill: \"#ffffff\", opacity: .25, paintOrder: \"normal\" } }), jsx(\"path\", { d: \"m33.635 36.986s7.776-13.318 6.6127-15.916c-1.1632-2.5964-8.4802-4.4974-15.248-4.4974-6.7677 0-14.084 1.9004-15.248 4.4974-1.1632 2.5966 6.6127 15.916 6.6127 15.916z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#5f5955\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", strokeLinecap: \"round\", strokeWidth: 1.2, stroke: \"#1e1e1e\" } }), jsx(\"path\", { d: \"m24.996 16.576c15.938 2.6216 12.573 9.3539 6.6406 22.543l2.0273-1.7288s7.7472-13.723 6.5839-16.32c-1.5452-2.8334-7.5027-4.1592-15.252-4.4945z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", opacity: .18, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m23.765 17.295c-3.904-0.18436-14.621 1.8014-13.503 5.0167 0.81724 3.7274 2.7544 7.244 4.5085 10.504-5.6872-10.335-5.9421-13.774 8.9943-15.521z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", opacity: .25, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m23.391 3.997-0.01613 3.3123h0.54565l0.01622-3.3123zm-4.9311 3.8699-0.0075 3.2077h0.77316l0.0075-3.2077zm4.4128 3.213 0.02573 2.4859h0.52l-0.02573-2.4859z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", opacity: .25, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m26.189 3.3582-1.9e-5 3.8935h0.98678l2.8e-5 -3.8935zm4.441 3.8937v4.9453h1.4802v-4.9453zm-4.4396 4.4291 2.7e-5 2.4923h1.4802l-2.8e-5 -2.4923z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#000000\", imageRendering: \"auto\", opacity: .18, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m25 36.457s-9.1309 0.0481-11.691 1.6192c-1.7273 1.0602-2.1348 3.6514-1.8998 6.3237h27.182c0.23495-2.6723-0.17255-5.2636-1.8999-6.3237-2.5597-1.5711-11.691-1.6192-11.691-1.6192z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#5f5955\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", strokeLinejoin: \"round\", strokeWidth: 1.2, stroke: \"#1e1e1e\" } }), jsx(\"path\", { d: \"m25 37.147s-8.7121-0.13732-11.624 1.6658c-0.36985 0.22904-0.69925 0.83943-0.95359 1.3902 0.26077-0.3313 0.50213-0.61301 0.88663-0.84901 2.5598-1.5711 11.691-1.6191 11.691-1.6191s9.1318 0.0479 11.692 1.6191c0.39104 0.24 0.59243 0.53161 0.85561 0.87009 0.0258-0.0759-0.40837-1.1578-1.1438-1.5962-2.7554-1.492-11.403-1.4808-11.403-1.4808z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", opacity: .25, shapeRendering: \"geometricPrecision\" } })] }))),\n    bN: (jsx(\"svg\", Object.assign({ clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", textRendering: \"geometricPrecision\", version: \"1.1\", viewBox: \"0 0 50 50\", xmlns: \"http://www.w3.org/2000/svg\" }, { children: jsxs(\"g\", Object.assign({ clipRule: \"evenodd\", fillRule: \"evenodd\", shapeRendering: \"geometricPrecision\" }, { children: [jsx(\"path\", { d: \"m25.192 23.015c-0.16544 6.9672-11.758 5.2189-11.516 18.104l22.86 0.1184c-2.094-6.442 9.69-25.16-11.931-32.258v-1e-4s-2.4381-2.601-5.9655-2.8237l0.2227 3.5347-4.5583 4.5816c-2.6294 3.1455-8.7347 8.3784-7.7513 9.6111 3.1158 5.3041 6.3306 4.4316 6.3306 4.4316 4.2418-4.5433 5.8193-2.0894 12.309-5.2997z\", fill: \"#5f5955\", imageRendering: \"auto\", stroke: \"#1e1e1e\", strokeLinejoin: \"round\", strokeWidth: \"1.2\" }), jsx(\"path\", { d: \"m19.32 14.694c-0.7757 0.86088-0.6902 1.1156-0.8137 2.1503 0.8055 0.12316 1.5069 0.23982 2.2486 0.0656 2.3809-1.262 0.075-3.4026-1.4347-2.2162z\", imageRendering: \"auto\", opacity: \".4\", style: { paintOrder: \"fill markers stroke\" } }), jsx(\"path\", { d: \"m9.1916 22.166c-0.8496 0.4078-0.9984 0.9608-1.0565 1.4754 0.7288 0.4181 1.8765-0.1255 2.0412-1.4316l-0.9846-0.044z\", imageRendering: \"auto\", opacity: \".35\" }), jsx(\"path\", { d: \"m8.1905 25.15s0.6525 1.1374-1.1019-1.641c0.6594-1.9774 8.263-9.0796 12.438-13.534l-0.1836-3.0857s1.0689 1.6901 1.2475 3.468c-4.3898 4.39-12.22 10.833-12.824 13.213 0.023 0.6738 0.24 1.0278 0.4231 1.5797z\", fill: \"#fff\", imageRendering: \"auto\", opacity: \".25\" }), jsx(\"path\", { d: \"m13.26 28.257c2.0291-3.3367 8.3914-3.2239 11.932-5.2424 0.3228 0.1024 0.1304 1.3697 0.2398 1.23 0.8476-1.0903 2.9259-3.279 0.8684-6.8743 0.5214 5.9575-13.718 5.5912-15.89 10.305-0.2005 0.4355 2.1818 0.7932 2.85 0.5818z\", imageRendering: \"auto\", opacity: \".18\" }), jsx(\"path\", { d: \"m25.8 23.781c-1.0131 5.8132-9.5449 6.1169-10.988 12.641 2.8332-6.4058 10.762-5.7136 10.988-12.641z\", fill: \"#fff\", imageRendering: \"auto\", opacity: \".25\" }), jsx(\"path\", { d: \"m18.64 6.1556s3.051 0.73807 4.9045 3.9825c20.499 7.1536 7.6413 27.937 5.7883 31.073l7.2034 0.026c-1.9871-3.2431 9.5482-25.597-11.931-32.258-1.7757-1.0691-2.7677-2.6092-5.9655-2.8238z\", imageRendering: \"auto\", opacity: \".18\" }), jsx(\"path\", { d: \"m25 36.457s-9.1309 0.048-11.691 1.6192c-1.7273 1.0602-2.1348 3.6514-1.8998 6.3237h27.182c0.235-2.6723-0.1725-5.2636-1.8999-6.3237-2.5597-1.5711-11.691-1.6192-11.691-1.6192z\", fill: \"#5f5955\", imageRendering: \"auto\", stroke: \"#1e1e1e\", strokeLinejoin: \"round\", strokeWidth: \"1.2\" }), jsx(\"path\", { d: \"m25 37.147s-8.7121-0.1373-11.624 1.6658c-0.3698 0.2291-0.6992 0.8394-0.9536 1.3902 0.2608-0.3313 0.5022-0.613 0.8867-0.849 2.5598-1.5711 11.691-1.6191 11.691-1.6191s9.1318 0.048 11.692 1.6191c0.391 0.24 0.5924 0.5316 0.8556 0.8701 0.026-0.076-0.4084-1.1578-1.1438-1.5962-2.7554-1.492-11.403-1.4808-11.403-1.4808z\", fill: \"#fff\", imageRendering: \"auto\", opacity: \".25\" })] })) }))),\n    bP: (jsxs(\"svg\", Object.assign({ clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", textRendering: \"geometricPrecision\", version: \"1.1\", viewBox: \"0 0 50 50\", xmlns: \"http://www.w3.org/2000/svg\" }, { children: [jsx(\"path\", { d: \"m21.503 27.594h6.9944m-9.4974-10.086c0 1.7315 0.7123 3.3873 1.9657 4.587l-3.6504 2.0999 0.43091 3.3988h4.3059c-0.79438 3.559-2.7548 7.3308-5.0622 8.6173s-5.2994 3.0968-4.8425 8.189l25.706 2.1e-5c0.45687-5.0922-2.5352-6.9025-4.8425-8.189-2.3074-1.2865-4.2678-5.0583-5.0622-8.6173h4.3059l0.43091-3.3988-3.6503-2.0999c1.2533-1.1996 1.9655-2.8554 1.9655-4.5869 3.11e-4 -3.3667-2.628-5.9118-6.0006-5.9118-3.3726-1.1e-5 -6.0008 2.545-6.0006 5.9117z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#5f5955\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", strokeLinejoin: \"round\", strokeWidth: 1.2, stroke: \"#1e1e1e\" } }), jsx(\"path\", { d: \"m24.962 11.537c1.1709-0.4586 9.5273 5.9057 0.64714 10.773l4.512 2.1-0.56221 3.125h2.6586l0.42868-3.3987-3.6504-2.0999c1.2534-1.1996 1.9618-2.5812 1.9646-4.3128-0.46888-5.4159-5.9985-6.1861-5.9985-6.1861zm-2.9485 15.998c4.5025 7.9337 9.4701 9.994 13.074 9.9646l-2.1157-1.347c-2.075-1.4895-4.7317-4.8572-5.0622-8.6177z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", opacity: .18, shapeRendering: \"geometricPrecision\", strokeWidth: .26457 } }), jsx(\"path\", { d: \"m21.983 22.213-1.647 2.3466-2.3561-0.01371 4.013-2.3234z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", opacity: 0.25, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m24.307 12.267c-2.5425 0.1381-5.73 3.1733-4.3848 6.9183l0.19878 0.64312c-0.3298-3.4894 2.1268-7.1169 4.186-7.5614z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", opacity: 0.25, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m17.863 37.625c-3.9839 2.3053-5.117 6.1402-5.117 6.1402-0.01037 0-0.54754-4.1751 3.9564-6.654 4.5039-2.4789 4.8215-6.1507 5.8602-8.8927-0.63708 3.7031-0.71573 7.1012-4.6996 9.4065z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", opacity: 0.25, shapeRendering: \"geometricPrecision\" } })] }))),\n    bQ: (jsxs(\"svg\", Object.assign({ clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", textRendering: \"geometricPrecision\", version: \"1.1\", viewBox: \"0 0 50 50\", xmlns: \"http://www.w3.org/2000/svg\" }, { children: [jsx(\"path\", { d: \"m24.959 5.0937a2.9585 3.3158 90 0 0-3.3155 2.9585 2.9585 3.3158 90 0 0 3.3155 2.9585 2.9585 3.3158 90 0 0 3.316-2.9585 2.9585 3.3158 90 0 0-3.316-2.9585z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#5f5955\", imageRendering: \"auto\", paintOrder: \"normal\", shapeRendering: \"geometricPrecision\", strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: 1.1999, stroke: \"#1e1e1e\" } }), jsx(\"path\", { d: \"m24.836 5.7323c-0.37582-0.20962-3.7243 0.80586-2.1848 3.5753-0.23547-1.5446 0.43755-3.2031 2.1848-3.5753z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", opacity: .25, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m24.959 11.011c-6.5068 0-9.5953 5.8843-9.5951 10.358h19.263c1.99e-4 -4.4741-3.1607-10.358-9.6676-10.358z\", style: { fill: \"#5f5955\", paintOrder: \"normal\", strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: 1.2, stroke: \"#1e1e1e\" } }), jsx(\"path\", { d: \"m18.161 14.977c1.0418-1.4783 2.9196-3.2199 6.8404-3.3796-0.31072 0.27709-4.7888 1.1374-6.8404 3.3796z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", opacity: .25, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m24.836 5.0067s0.04572 0.23808-1e-4 0c2.4799 1.1289 2.0497 3.8473 0.81734 5.547 7.3536 3.8036 2.2125 8.669 2.2122 8.6681h2.7008c1.7619 1.287 7.2086-2.7409-3.8351-8.669 3.5276-3.1154 0.09642-5.6072-1.8952-5.5466z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", opacity: .18, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m25 15.225c-1.971 0-2.3483 2.6494-4.1366 2.8592-1.8213 0.21366-3.3816-2.3114-5.2505-1.7361-1.4945 0.46001-0.77828 2.5999-1.8053 3.1752-1.4018 0.78508-3.1845-1.8324-5.2902-0.29827 6.8387 8.8288 8.0859 12.377 7.9833 18.819l16.998-9.9e-5c-0.10268-6.4426 1.1445-9.9904 7.9831-18.819-2.1056-1.5341-3.8884 1.0833-5.2901 0.29827-1.0271-0.57526-0.31082-2.7152-1.8053-3.1752-1.8688-0.57526-3.4293 1.9498-5.2506 1.7361-1.7884-0.20981-2.1655-2.8592-4.1365-2.8592z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#5f5955\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: 1.1999, stroke: \"#1e1e1e\" } }), jsx(\"path\", { d: \"m9.8952 19.34c-0.13588-0.0099-0.33139 0.05615-0.45862 0.08471 3.0815 4.0999 6.5751 9.5372 7.0991 12.417-1.4062-4.9323-3.2664-9.5622-6.1403-12.472z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", opacity: .25, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m39.974 18.735c-9.4852 10.003-9.9239 17.985-16.941 19.31h10.476c-0.10268-6.4427 1.1445-9.9905 7.9831-18.819 0 0-0.68803-0.75582-1.5179-0.49124z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", opacity: .18, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m14.912 18.945c0.20277-0.08767 1.1841-1.8078 1.9805-1.9501-1.42-0.34555-1.6188-0.0463-1.9805 1.9501z\", style: { fill: \"#ffffff\", opacity: 25 } }), jsx(\"path\", { d: \"m22.511 17.876c0.95342-0.84704 1.6333-2.6551 3.2379-1.8453-0.79746-0.22882-2.2148 1.0403-3.2379 1.8453z\", style: { fill: \"#ffffff\", opacity: 25 } }), jsx(\"path\", { d: \"m31.12 18.133c0.20983 0.06994 2.1762-1.6423 2.8625-1.2176 0 0-1.4313 1.1196-2.8625 1.2176z\", style: { fill: \"#ffffff\", opacity: 25 } }), jsx(\"path\", { d: \"m25 36.457s-9.1309 0.048-11.691 1.6192c-1.7273 1.0602-2.1348 3.6515-1.8998 6.3237l27.182-1e-4c0.2349-2.6723-0.1726-5.2635-1.8999-6.3237-2.5598-1.5711-11.691-1.6192-11.691-1.6192z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#5f5955\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", strokeLinejoin: \"round\", strokeWidth: 1.2, stroke: \"#1e1e1e\" } }), jsx(\"path\", { d: \"m25 37.147s-8.7121-0.1374-11.624 1.6658c-0.3699 0.229-0.6993 0.8394-0.9536 1.3902 0.2608-0.3313 0.5021-0.613 0.8866-0.849 2.5597-1.5711 11.691-1.6192 11.691-1.6192s9.1318 0.048 11.692 1.6192c0.3911 0.24 0.5925 0.5316 0.8556 0.87 0.026-0.076-0.4083-1.1578-1.1438-1.5962-2.7554-1.492-11.403-1.4808-11.403-1.4808z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", opacity: .25, shapeRendering: \"geometricPrecision\" } })] }))),\n    bR: (jsxs(\"svg\", Object.assign({ clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", textRendering: \"geometricPrecision\", version: \"1.1\", viewBox: \"0 0 50 50\", xmlns: \"http://www.w3.org/2000/svg\" }, { children: [jsx(\"path\", { d: \"m17.932 20.414c4.9056-0.74066 9.5787-0.57845 14.136 0m-17.885-10.752c-1.0592 8.7669 1.1034 10.677 3.7482 10.752l-3.3154 18.159h20.767l-3.3154-18.159c2.6448-0.0745 4.8074-1.9849 3.7482-10.752l-3.6072-0.52917-1.0733 3.6427-3.1416-0.0995-0.5222-3.754h-4.9448l-0.52127 3.754-3.142 0.0995-1.0733-3.6427z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#5f5955\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", strokeWidth: 1.2, stroke: \"#1e1e1e\" } }), jsx(\"path\", { d: \"m17.932 20.414c6.828 0 13.118 0.40763 14.948 16.572l2.3187 0.38585-3.1311-16.428c-0.03144-0.30772-6.0881-1.8224-14.136-0.52917z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", opacity: .18, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m14.777 10.219 2.2766-0.28599c-1.9137 0.31197-2.3128 5.2958-2.3128 5.2958-0.23801-0.17655-0.18808-4.9033 0.03618-5.0098z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", opacity: .25, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m25.276 9.5507c-1.6477 0-2.5191 2.7475-2.5191 2.7475l0.33726-2.7288z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", opacity: .25, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m32.671 9.8162 0.93397 0.11826c-0.78478 0.49954-1.5905 1.9884-1.5905 1.9884z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", opacity: .25, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m18.472 20.964 2.6206-0.29312c-2.6206 0.29312-4.8959 13.053-4.9066 13.113z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", opacity: .25, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m34.013 9.3979c0.35682 6.3635-1.9499 10.603-8.0415 10.536l4.778 0.56323c7.5226 0.30904 5.101-10.806 5.0671-10.835z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", opacity: .18, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m25 36.457s-9.1309 0.04814-11.691 1.6192c-1.7273 1.0602-2.1348 3.6515-1.8998 6.3237h27.182c0.23496-2.6723-0.17255-5.2635-1.8999-6.3237-2.5597-1.5711-11.691-1.6192-11.691-1.6192z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#5f5955\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", strokeLinejoin: \"round\", strokeWidth: 1.2, stroke: \"#1e1e1e\" } }), jsx(\"path\", { d: \"m25 37.146s-8.7121-0.13732-11.624 1.6658c-0.36985 0.22905-0.69926 0.83944-0.95359 1.3902 0.26077-0.3313 0.50213-0.61301 0.88664-0.84902 2.5597-1.5711 11.691-1.6191 11.691-1.6191s9.1318 0.04794 11.692 1.6191c0.39104 0.24 0.59242 0.53161 0.85561 0.87009 0.02583-0.0759-0.40837-1.1579-1.1438-1.5962-2.7554-1.492-11.403-1.4808-11.403-1.4808z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", opacity: .25, shapeRendering: \"geometricPrecision\" } })] }))),\n    wB: (jsxs(\"svg\", Object.assign({ clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", textRendering: \"geometricPrecision\", version: \"1.1\", viewBox: \"0 0 50 50\", xmlns: \"http://www.w3.org/2000/svg\" }, { children: [jsx(\"path\", { d: \"m25 5.767c-2.1056 0-3.8124 0.87865-3.8121 1.9632l1.5166 2.6505c-16.049 14.089-5.707 27.135-5.707 27.135h16.006s7.0496-8.6714 0.76227-19.51l-2.989 4.8276c-0.67072 1.0833-1.9632 1.4898-2.898 0.91107-0.93477-0.57872-1.1472-1.917-0.47652-3.0003l3.8867-6.2771c-1.1073-1.3449-2.4252-2.7101-3.9926-4.0861l1.5166-2.6505c0-1.0846-1.7066-1.9632-3.8121-1.9632z\", style: { fill: \"#f0f0f0\", strokeLinejoin: \"round\", strokeWidth: 1.2, stroke: \"#3c3c3c\" } }), jsx(\"path\", { d: \"m25 5.767c-0.8164 0-1.5711 0.1335-2.1913 0.35847 4.3387 0.84718 4.9765 1.1195 2.5601 4.3506l3.246 3.5665c-3.6565 8.2403-1.6037 7.9919-1.6037 7.9919s0.6964-2.6485 4.1117-7.7689c-1.0722-1.2796-2.3377-2.578-3.8266-3.8851l1.5161-2.6501c1e-4 -1.0845-1.7067-1.9631-3.8123-1.9634zm8.7655 12.238-1.0091 1.5127c3.7363 8.4129-4.1347 17.997-4.1347 17.997h4.3815c0.1581 0.0339 6.958-8.8438 0.76227-19.51z\", style: { fill: \"#000000\", opacity: .15 } }), jsx(\"path\", { d: \"m15.145 31.721c-0.2191-0.0314-3.4233-9.7859 5.7543-18.751-2.3019 1.895-7.1351 13.163-5.7543 18.751z\", style: { fill: \"#ffffff\" } }), jsx(\"path\", { d: \"m23.292 10.196-1.4772-2.5943s0.2425-0.72175 1.7808-1.0472c-1.7266 1.3502-0.988 1.6622-0.3036 3.6415z\", style: { fill: \"#ffffff\" } }), jsx(\"path\", { d: \"m25 36.457s-9.1309 0.048-11.691 1.6192c-1.7273 1.0602-2.1348 3.6514-1.8998 6.3237h27.182c0.2349-2.6723-0.1726-5.2636-1.8999-6.3237-2.5597-1.5711-11.691-1.6192-11.691-1.6192z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#f0f0f0\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", strokeLinejoin: \"round\", strokeWidth: 1.2, stroke: \"#3c3c3c\" } }), jsx(\"path\", { d: \"m25 37.147s-8.7121-0.1374-11.624 1.6658c-0.3699 0.229-0.6993 0.8394-0.9536 1.3902 0.2607-0.3313 0.5021-0.6131 0.8866-0.8491 2.5598-1.5711 11.691-1.6191 11.691-1.6191s9.1318 0.048 11.692 1.6191c0.391 0.24 0.5924 0.5317 0.8556 0.8701 0.026-0.076-0.4084-1.1578-1.1438-1.5962-2.7554-1.492-11.403-1.4808-11.403-1.4808z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\" } })] }))),\n    wK: (jsxs(\"svg\", Object.assign({ clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", textRendering: \"geometricPrecision\", version: \"1.1\", viewBox: \"0 0 50 50\", xmlns: \"http://www.w3.org/2000/svg\", xmlnsXlink: \"http://www.w3.org/1999/xlink\" }, { children: [jsx(\"path\", { d: \"m27.67 15.225v-3.5436h4.4396v-4.4293h-4.9344v-3.8933h-4.366v3.8933h-4.9344v4.4293h4.4396v3.5436\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#f0f0f0\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", strokeLinecap: \"round\", strokeWidth: 1.2, stroke: \"#3c3c3c\" } }), jsx(\"rect\", { x: \"20.299\", y: \"14.215\", width: \"9.3984\", height: \"2.7873\", ry: \"1.3937\", style: { fill: \"#f0f0f0\", paintOrder: \"normal\", strokeLinejoin: \"round\", strokeWidth: 1.2, stroke: \"#3c3c3c\" } }), jsx(\"path\", { d: \"m26.416 14.215c0.72479 0 1.3082 0.62142 1.3082 1.3935 0 0.77209-0.58336 1.3935-1.3082 1.3935h1.9736c0.72478 0 1.3081-0.62144 1.3081-1.3935 0-0.77209-0.58336-1.3935-1.3081-1.3935z\", style: { fill: \"#000000\", opacity: .15, paintOrder: \"normal\" } }), jsx(\"path\", { d: \"m21.631 14.842c-0.40169 0-0.72499 0.34468-0.72499 0.77259 0 0.42787 0.3233 0.77227 0.72499 0.77227h0.87379c-0.40169 0-0.72499-0.3444-0.72499-0.77227 0-0.42791 0.3233-0.77259 0.72499-0.77259z\", style: { fill: \"#ffffff\", paintOrder: \"normal\" } }), jsx(\"path\", { d: \"m33.635 36.986s7.776-13.318 6.6127-15.916c-1.1632-2.5964-8.4802-4.4974-15.248-4.4974-6.7677 0-14.084 1.9004-15.248 4.4974-1.1632 2.5966 6.6127 15.916 6.6127 15.916z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#f0f0f0\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", strokeLinecap: \"round\", strokeWidth: 1.2, stroke: \"#3c3c3c\" } }), jsx(\"path\", { d: \"m24.996 16.576c15.938 2.6216 12.573 9.3539 6.6406 22.543l2.0273-1.7288s7.7472-13.723 6.5839-16.32c-1.5452-2.8334-7.5027-4.1592-15.252-4.4945z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", opacity: .15, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m23.765 17.295c-3.904-0.18436-14.621 1.8014-13.503 5.0167 0.81724 3.7274 2.7544 7.244 4.5085 10.504-5.6872-10.335-5.9421-13.774 8.9943-15.521z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m23.391 3.997-0.01613 3.3123h0.54565l0.01622-3.3123zm-4.9311 3.8699-0.0075 3.2077h0.77316l0.0075-3.2077zm4.4128 3.213 0.02573 2.4859h0.52l-0.02573-2.4859z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m26.189 3.3582-1.9e-5 3.8935h0.98678l2.8e-5 -3.8935zm4.441 3.8937v4.9453h1.4802v-4.9453zm-4.4396 4.4291 2.7e-5 2.4923h1.4802l-2.8e-5 -2.4923z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#000000\", imageRendering: \"auto\", opacity: .15, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m25 36.457s-9.1309 0.0481-11.691 1.6192c-1.7273 1.0602-2.1348 3.6514-1.8998 6.3237h27.182c0.23495-2.6723-0.17255-5.2636-1.8999-6.3237-2.5597-1.5711-11.691-1.6192-11.691-1.6192z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#f0f0f0\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", strokeLinejoin: \"round\", strokeWidth: 1.2, stroke: \"#3c3c3c\" } }), jsx(\"path\", { d: \"m25 37.147s-8.7121-0.13732-11.624 1.6658c-0.36985 0.22904-0.69925 0.83943-0.95359 1.3902 0.26077-0.3313 0.50213-0.61301 0.88663-0.84901 2.5598-1.5711 11.691-1.6191 11.691-1.6191s9.1318 0.0479 11.692 1.6191c0.39104 0.24 0.59243 0.53161 0.85561 0.87009 0.0258-0.0759-0.40837-1.1578-1.1438-1.5962-2.7554-1.492-11.403-1.4808-11.403-1.4808z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\" } })] }))),\n    wN: (jsx(\"svg\", Object.assign({ clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", textRendering: \"geometricPrecision\", version: \"1.1\", viewBox: \"0 0 50 50\", xmlns: \"http://www.w3.org/2000/svg\" }, { children: jsxs(\"g\", Object.assign({ clipRule: \"evenodd\", fillRule: \"evenodd\", shapeRendering: \"geometricPrecision\" }, { children: [jsx(\"path\", { d: \"m25.192 23.015c-0.16544 6.9672-11.758 5.2189-11.516 18.104l22.86 0.1184c-2.094-6.442 9.69-25.16-11.931-32.258v-1e-4s-2.4381-2.601-5.9655-2.8237l0.2227 3.5347-4.5583 4.5816c-2.6294 3.1455-8.7347 8.3784-7.7513 9.6111 3.1158 5.3041 6.3306 4.4316 6.3306 4.4316 4.2418-4.5433 5.8193-2.0894 12.309-5.2997z\", fill: \"#f0f0f0\", imageRendering: \"auto\", stroke: \"#3c3c3c\", strokeLinejoin: \"round\", strokeWidth: \"1.2\" }), jsx(\"path\", { d: \"m19.32 14.694c-0.7757 0.86088-0.6902 1.1156-0.8137 2.1503 0.8055 0.12316 1.5069 0.23982 2.2486 0.0656 2.3809-1.262 0.075-3.4026-1.4347-2.2162z\", imageRendering: \"auto\", opacity: \".35\", style: { paintOrder: \"fill markers stroke\" } }), jsx(\"path\", { d: \"m9.1916 22.166c-0.8496 0.4078-0.9984 0.9608-1.0565 1.4754 0.7288 0.4181 1.8765-0.1255 2.0412-1.4316l-0.9846-0.044z\", imageRendering: \"auto\", opacity: \".3\" }), jsx(\"path\", { d: \"m8.1905 25.15s0.6525 1.1374-1.1019-1.641c0.6594-1.9774 8.263-9.0796 12.438-13.534l-0.1836-3.0857s1.0689 1.6901 1.2475 3.468c-4.3898 4.39-12.22 10.833-12.824 13.213 0.023 0.6738 0.24 1.0278 0.4231 1.5797z\", fill: \"#fff\", imageRendering: \"auto\" }), jsx(\"path\", { d: \"m13.26 28.257c2.0291-3.3367 8.3914-3.2239 11.932-5.2424 0.3228 0.1024 0.1304 1.3697 0.2398 1.23 0.8476-1.0903 2.9259-3.279 0.8684-6.8743 0.5214 5.9575-13.718 5.5912-15.89 10.305-0.2005 0.4355 2.1818 0.7932 2.85 0.5818z\", imageRendering: \"auto\", opacity: \".15\" }), jsx(\"path\", { d: \"m25.8 23.781c-1.0131 5.8132-9.5449 6.1169-10.988 12.641 2.8332-6.4058 10.762-5.7136 10.988-12.641z\", fill: \"#fff\", imageRendering: \"auto\" }), jsx(\"path\", { d: \"m18.64 6.1556s3.051 0.73807 4.9045 3.9825c20.499 7.1536 7.6413 27.937 5.7883 31.073l7.2034 0.026c-1.9871-3.2431 9.5482-25.597-11.931-32.258-1.7757-1.0691-2.7677-2.6092-5.9655-2.8238z\", imageRendering: \"auto\", opacity: \".15\" }), jsx(\"path\", { d: \"m25 36.457s-9.1309 0.048-11.691 1.6192c-1.7273 1.0602-2.1348 3.6514-1.8998 6.3237h27.182c0.235-2.6723-0.1725-5.2636-1.8999-6.3237-2.5597-1.5711-11.691-1.6192-11.691-1.6192z\", fill: \"#f0f0f0\", imageRendering: \"auto\", stroke: \"#3c3c3c\", strokeLinejoin: \"round\", strokeWidth: \"1.2\" }), jsx(\"path\", { d: \"m25 37.147s-8.7121-0.1373-11.624 1.6658c-0.3698 0.2291-0.6992 0.8394-0.9536 1.3902 0.2608-0.3313 0.5022-0.613 0.8867-0.849 2.5598-1.5711 11.691-1.6191 11.691-1.6191s9.1318 0.048 11.692 1.6191c0.391 0.24 0.5924 0.5316 0.8556 0.8701 0.026-0.076-0.4084-1.1578-1.1438-1.5962-2.7554-1.492-11.403-1.4808-11.403-1.4808z\", fill: \"#fff\", imageRendering: \"auto\" })] })) }))),\n    wP: (jsxs(\"svg\", Object.assign({ clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", textRendering: \"geometricPrecision\", version: \"1.1\", viewBox: \"0 0 50 50\", xmlns: \"http://www.w3.org/2000/svg\" }, { children: [jsx(\"path\", { d: \"m21.503 27.594h6.9944m-9.4974-10.086c0 1.7315 0.7123 3.3873 1.9657 4.587l-3.6504 2.0999 0.43091 3.3988h4.3059c-0.79438 3.559-2.7548 7.3308-5.0622 8.6173s-5.2994 3.0968-4.8425 8.189l25.706 2.1e-5c0.45687-5.0922-2.5352-6.9025-4.8425-8.189-2.3074-1.2865-4.2678-5.0583-5.0622-8.6173h4.3059l0.43091-3.3988-3.6503-2.0999c1.2533-1.1996 1.9655-2.8554 1.9655-4.5869 3.11e-4 -3.3667-2.628-5.9118-6.0006-5.9118-3.3726-1.1e-5 -6.0008 2.545-6.0006 5.9117z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#f0f0f0\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", strokeLinejoin: \"round\", strokeWidth: 1.2, stroke: \"#3c3c3c\" } }), jsx(\"path\", { d: \"m24.962 11.537c1.1709-0.4586 9.5273 5.9057 0.64714 10.773l4.512 2.1-0.56221 3.125h2.6586l0.42868-3.3987-3.6504-2.0999c1.2534-1.1996 1.9618-2.5812 1.9646-4.3128-0.46888-5.4159-5.9985-6.1861-5.9985-6.1861zm-2.9485 15.998c4.5025 7.9337 9.4701 9.994 13.074 9.9646l-2.1157-1.347c-2.075-1.4895-4.7317-4.8572-5.0622-8.6177z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", opacity: .15, shapeRendering: \"geometricPrecision\", strokeWidth: .26457 } }), jsx(\"path\", { d: \"m21.983 22.213-1.647 2.3466-2.3561-0.01371 4.013-2.3234z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m24.307 12.267c-2.5425 0.1381-5.73 3.1733-4.3848 6.9183l0.19878 0.64312c-0.3298-3.4894 2.1268-7.1169 4.186-7.5614z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m17.863 37.625c-3.9839 2.3053-5.117 6.1402-5.117 6.1402-0.01037 0-0.54754-4.1751 3.9564-6.654 4.5039-2.4789 4.8215-6.1507 5.8602-8.8927-0.63708 3.7031-0.71573 7.1012-4.6996 9.4065z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\" } })] }))),\n    wQ: (jsxs(\"svg\", Object.assign({ clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", textRendering: \"geometricPrecision\", version: \"1.1\", viewBox: \"0 0 50 50\", xmlns: \"http://www.w3.org/2000/svg\" }, { children: [jsx(\"path\", { d: \"m24.959 5.0937a2.9585 3.3158 90 0 0-3.3155 2.9585 2.9585 3.3158 90 0 0 3.3155 2.9585 2.9585 3.3158 90 0 0 3.316-2.9585 2.9585 3.3158 90 0 0-3.316-2.9585z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#f0f0f0\", imageRendering: \"auto\", paintOrder: \"normal\", shapeRendering: \"geometricPrecision\", strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: 1.1999, stroke: \"#3c3c3c\" } }), jsx(\"path\", { d: \"m24.836 5.7323c-0.37582-0.20962-3.7243 0.80586-2.1848 3.5753-0.23547-1.5446 0.43755-3.2031 2.1848-3.5753z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m24.959 11.011c-6.5068 0-9.5953 5.8843-9.5951 10.358h19.263c1.99e-4 -4.4741-3.1607-10.358-9.6676-10.358z\", style: { fill: \"#f0f0f0\", paintOrder: \"normal\", strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: 1.2, stroke: \"#3c3c3c\" } }), jsx(\"path\", { d: \"m18.161 14.977c1.0418-1.4783 2.9196-3.2199 6.8404-3.3796-0.31072 0.27709-4.7888 1.1374-6.8404 3.3796z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m24.836 5.0067s0.04572 0.23808-1e-4 0c2.4799 1.1289 2.0497 3.8473 0.81734 5.547 7.3536 3.8036 2.2125 8.669 2.2122 8.6681h2.7008c1.7619 1.287 7.2086-2.7409-3.8351-8.669 3.5276-3.1154 0.09642-5.6072-1.8952-5.5466z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", opacity: .15, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m25 15.225c-1.971 0-2.3483 2.6494-4.1366 2.8592-1.8213 0.21366-3.3816-2.3114-5.2505-1.7361-1.4945 0.46001-0.77828 2.5999-1.8053 3.1752-1.4018 0.78508-3.1845-1.8324-5.2902-0.29827 6.8387 8.8288 8.0859 12.377 7.9833 18.819l16.998-9.9e-5c-0.10268-6.4426 1.1445-9.9904 7.9831-18.819-2.1056-1.5341-3.8884 1.0833-5.2901 0.29827-1.0271-0.57526-0.31082-2.7152-1.8053-3.1752-1.8688-0.57526-3.4293 1.9498-5.2506 1.7361-1.7884-0.20981-2.1655-2.8592-4.1365-2.8592z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#f0f0f0\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: 1.1999, stroke: \"#3c3c3c\" } }), jsx(\"path\", { d: \"m9.8952 19.34c-0.13588-0.0099-0.33139 0.05615-0.45862 0.08471 3.0815 4.0999 6.5751 9.5372 7.0991 12.417-1.4062-4.9323-3.2664-9.5622-6.1403-12.472z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m39.974 18.735c-9.4852 10.003-9.9239 17.985-16.941 19.31h10.476c-0.10268-6.4427 1.1445-9.9905 7.9831-18.819 0 0-0.68803-0.75582-1.5179-0.49124z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", opacity: .15, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m14.912 18.945c0.20277-0.08767 1.1841-1.8078 1.9805-1.9501-1.42-0.34555-1.6188-0.0463-1.9805 1.9501z\", style: { fill: \"#ffffff\" } }), jsx(\"path\", { d: \"m22.511 17.876c0.95342-0.84704 1.6333-2.6551 3.2379-1.8453-0.79746-0.22882-2.2148 1.0403-3.2379 1.8453z\", style: { fill: \"#ffffff\" } }), jsx(\"path\", { d: \"m31.12 18.133c0.20983 0.06994 2.1762-1.6423 2.8625-1.2176 0 0-1.4313 1.1196-2.8625 1.2176z\", style: { fill: \"#ffffff\" } }), jsx(\"path\", { d: \"m25 36.457s-9.1309 0.048-11.691 1.6192c-1.7273 1.0602-2.1348 3.6515-1.8998 6.3237l27.182-1e-4c0.2349-2.6723-0.1726-5.2635-1.8999-6.3237-2.5598-1.5711-11.691-1.6192-11.691-1.6192z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#f0f0f0\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", strokeLinejoin: \"round\", strokeWidth: 1.2, stroke: \"#3c3c3c\" } }), jsx(\"path\", { d: \"m25 37.147s-8.7121-0.1374-11.624 1.6658c-0.3699 0.229-0.6993 0.8394-0.9536 1.3902 0.2608-0.3313 0.5021-0.613 0.8866-0.849 2.5597-1.5711 11.691-1.6192 11.691-1.6192s9.1318 0.048 11.692 1.6192c0.3911 0.24 0.5925 0.5316 0.8556 0.87 0.026-0.076-0.4083-1.1578-1.1438-1.5962-2.7554-1.492-11.403-1.4808-11.403-1.4808z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\" } })] }))),\n    wR: (jsxs(\"svg\", Object.assign({ clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", textRendering: \"geometricPrecision\", version: \"1.1\", viewBox: \"0 0 50 50\", xmlns: \"http://www.w3.org/2000/svg\" }, { children: [jsx(\"path\", { d: \"m17.932 20.414c4.9056-0.74066 9.5787-0.57845 14.136 0m-17.885-10.752c-1.0592 8.7669 1.1034 10.677 3.7482 10.752l-3.3154 18.159h20.767l-3.3154-18.159c2.6448-0.0745 4.8074-1.9849 3.7482-10.752l-3.6072-0.52917-1.0733 3.6427-3.1416-0.0995-0.5222-3.754h-4.9448l-0.52127 3.754-3.142 0.0995-1.0733-3.6427z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#f0f0f0\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", strokeWidth: 1.2, stroke: \"#3c3c3c\" } }), jsx(\"path\", { d: \"m17.932 20.414c6.828 0 13.118 0.40763 14.948 16.572l2.3187 0.38585-3.1311-16.428c-0.03144-0.30772-6.0881-1.8224-14.136-0.52917z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", opacity: .15, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m14.777 10.219 2.2766-0.28599c-1.9137 0.31197-2.3128 5.2958-2.3128 5.2958-0.23801-0.17655-0.18808-4.9033 0.03618-5.0098z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m25.276 9.5507c-1.6477 0-2.5191 2.7475-2.5191 2.7475l0.33726-2.7288z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m32.671 9.8162 0.93397 0.11826c-0.78478 0.49954-1.5905 1.9884-1.5905 1.9884z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m18.472 20.964 2.6206-0.29312c-2.6206 0.29312-4.8888 13.113-4.8888 13.113z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m34.013 9.3979c0.35682 6.3635-1.9499 10.603-8.0415 10.536l4.778 0.56323c7.5226 0.30904 5.101-10.806 5.0671-10.835z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", imageRendering: \"auto\", opacity: .15, shapeRendering: \"geometricPrecision\" } }), jsx(\"path\", { d: \"m25 36.457s-9.1309 0.04814-11.691 1.6192c-1.7273 1.0602-2.1348 3.6515-1.8998 6.3237h27.182c0.23496-2.6723-0.17255-5.2635-1.8999-6.3237-2.5597-1.5711-11.691-1.6192-11.691-1.6192z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#f0f0f0\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\", strokeLinejoin: \"round\", strokeWidth: 1.2, stroke: \"#3c3c3c\" } }), jsx(\"path\", { d: \"m25 37.146s-8.7121-0.13732-11.624 1.6658c-0.36985 0.22905-0.69926 0.83944-0.95359 1.3902 0.26077-0.3313 0.50213-0.61301 0.88664-0.84902 2.5597-1.5711 11.691-1.6191 11.691-1.6191s9.1318 0.04794 11.692 1.6191c0.39104 0.24 0.59242 0.53161 0.85561 0.87009 0.02583-0.0759-0.40837-1.1579-1.1438-1.5962-2.7554-1.492-11.403-1.4808-11.403-1.4808z\", style: { clipRule: \"evenodd\", fillRule: \"evenodd\", fill: \"#ffffff\", imageRendering: \"auto\", shapeRendering: \"geometricPrecision\" } })] })))\n};\n\nclass ChessPieceIcon extends React.Component {\n    render() {\n        return (jsx(\"div\", Object.assign({ style: {\n                display: typeof this.props.piece == 'object' ? 'block' : 'none',\n                position: \"relative\",\n                pointerEvents: 'none',\n            } }, { children: jsx(\"div\", Object.assign({ style: {\n                    filter: 'drop-shadow(0 0 0.5rem #aaaaaa)',\n                    position: 'absolute',\n                    margin: 'auto',\n                    inset: '0',\n                    pointerEvents: 'none',\n                } }, { children: typeof this.props.piece == 'object' &&\n                    [[\n                            Staunty['wP'],\n                            Staunty['wN'],\n                            Staunty['wB'],\n                            Staunty['wR'],\n                            Staunty['wQ'],\n                            Staunty['wK']\n                        ], [\n                            Staunty['bP'],\n                            Staunty['bN'],\n                            Staunty['bB'],\n                            Staunty['bR'],\n                            Staunty['bQ'],\n                            Staunty['bK']\n                        ]][this.props.piece.color][this.props.piece.type] })) })));\n    }\n}\n\nclass ChessBoardSquare extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (jsxs(\"div\", Object.assign({ style: Object.assign(Object.assign({}, this.props.style), { backgroundColor: (this.props.square.row + this.props.square.file) % 2 === 0 ? 'white' : '#AAAAAA', border: this.props.destination ? '8px solid #FF6666DD' : '0px solid #FF6666DD', width: '100%', height: '100%', position: 'relative', boxSizing: 'border-box', transition: '0.2s' }), onMouseDown: this.props.onMouseDown, onMouseUp: this.props.onMouseUp, onMouseOver: this.props.onMouseOver, onClick: this.props.onClick, tabIndex: 0 }, { children: [jsx(\"div\", { style: {\n                        position: 'absolute',\n                        inset: '0px',\n                        backgroundColor: this.props.selected ? '#FF6666DD' : '#AACCFF88',\n                        pointerEvents: 'none',\n                        opacity: this.props.selected || this.props.recent ? 1 : 0,\n                        transition: '0.2s'\n                    } }), jsx(\"div\", { style: typeof this.props.piece == 'object' ? {\n                        position: 'absolute',\n                        inset: '0px',\n                        background: 'radial-gradient(transparent 0%, transparent 79%, #00000033 80%)',\n                        pointerEvents: 'none',\n                        opacity: this.props.valid ? 1 : 0,\n                        transition: '0.2s'\n                    } : {\n                        position: 'absolute',\n                        inset: '0px',\n                        margin: 'auto',\n                        width: '35%',\n                        height: '35%',\n                        borderRadius: '50%',\n                        backgroundColor: '#00000033',\n                        pointerEvents: 'none',\n                        opacity: this.props.valid ? 1 : 0,\n                        transition: '0.2s'\n                    } }), jsx(\"div\", { style: {\n                        position: 'absolute',\n                        inset: '0px',\n                        background: 'radial-gradient(#FF0000 20%, transparent 80%)',\n                        pointerEvents: 'none',\n                        opacity: this.props.underAttack ? 1 : 0,\n                        transition: '0.2s'\n                    } }), jsx(ChessPieceIcon, { piece: this.props.piece })] })));\n    }\n}\n\nvar ChessColor;\n(function (ChessColor) {\n    ChessColor[ChessColor[\"WHITE\"] = 0] = \"WHITE\";\n    ChessColor[ChessColor[\"BLACK\"] = 1] = \"BLACK\";\n})(ChessColor || (ChessColor = {}));\nvar ChessPieceType;\n(function (ChessPieceType) {\n    ChessPieceType[ChessPieceType[\"PAWN\"] = 0] = \"PAWN\";\n    ChessPieceType[ChessPieceType[\"KNIGHT\"] = 1] = \"KNIGHT\";\n    ChessPieceType[ChessPieceType[\"BISHOP\"] = 2] = \"BISHOP\";\n    ChessPieceType[ChessPieceType[\"ROOK\"] = 3] = \"ROOK\";\n    ChessPieceType[ChessPieceType[\"QUEEN\"] = 4] = \"QUEEN\";\n    ChessPieceType[ChessPieceType[\"KING\"] = 5] = \"KING\";\n})(ChessPieceType || (ChessPieceType = {}));\n\n// https://stackoverflow.com/questions/5598743/finding-elements-position-relative-to-the-document\nfunction getElementPosition(element) {\n    var box = element.getBoundingClientRect();\n    var scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\n    var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft;\n    var clientTop = document.documentElement.clientTop || document.body.clientTop || 0;\n    var clientLeft = document.documentElement.clientLeft || document.body.clientLeft || 0;\n    var top = box.top + scrollTop - clientTop;\n    var left = box.left + scrollLeft - clientLeft;\n    return { x: Math.round(left), y: Math.round(top) };\n}\nclass ChessBoardSquares extends React.Component {\n    constructor(props) {\n        super(props);\n        this.draggedChessPieceStyles = {\n            position: 'absolute',\n            width: (1 / 8 * 100) + '%',\n            height: (1 / 8 * 100) + '%',\n            transform: 'translate(-50%, -50%)',\n            pointerEvents: 'none',\n        };\n        this.draggedChessPiece = React.createRef();\n        this.draggedChessPieceContainer = React.createRef();\n        this.chessBoardSquares = React.createRef();\n        this.state = {\n            isDragging: false,\n            willDeselect: false,\n            legalMoves: [],\n        };\n        this.onSquareHover = this.onSquareHover.bind(this);\n        this.onMouseOut = this.onMouseOut.bind(this);\n        this.onMouseDown = this.onMouseDown.bind(this);\n        this.onMouseUp = this.onMouseUp.bind(this);\n        this.onMouseMove = this.onMouseMove.bind(this);\n    }\n    render() {\n        let inCheck = this.props.inCheck && this.props.inCheck();\n        return (jsxs(\"div\", Object.assign({ style: {\n                display: 'grid',\n                gridTemplateColumns: 'repeat(8, 1fr)',\n                gridTemplateRows: 'repeat(8, 1fr)',\n                width: '100%',\n                height: '100%',\n                alignItems: 'stretch',\n                cursor: this.state.isDragging ? ('grabbing') : (this.state.selectedSquare ? (this.state.selectedSquare && this.state.hoveredSquare && (this.state.hoveredSquare.row == this.state.selectedSquare.row && this.state.hoveredSquare.file == this.state.selectedSquare.file) ? ('grab') : ('pointer')) : (this.state.hoveredSquare && this.props.pieces[this.state.hoveredSquare.row][this.state.hoveredSquare.file] ? ('grab') : ('default'))),\n            }, onMouseOut: this.onMouseOut, onMouseDown: this.onMouseDown, ref: this.chessBoardSquares }, { children: [Array(8 * 8).fill(0).map((_, i) => {\n                    var _a, _b;\n                    let row = (i / 8) | 0;\n                    let file = i % 8;\n                    let selected = ((_a = this.state.selectedSquare) === null || _a === void 0 ? void 0 : _a.row) == row && this.state.selectedSquare.file == file;\n                    let destination = ((_b = this.state.destinationSquare) === null || _b === void 0 ? void 0 : _b.row) == row && this.state.destinationSquare.file == file && !selected;\n                    let valid = this.state.selectedSquare && this.state.legalMoves.some(square => square.row == row && square.file == file);\n                    let piece = this.props.pieces[row][file];\n                    let underAttack = inCheck && piece && piece.type == ChessPieceType.KING && this.props.getTurn && this.props.getTurn() == piece.color;\n                    let recent = typeof this.props.recent.find(square => square.row == row && square.file == file) != 'undefined';\n                    return (jsx(ChessBoardSquare, { piece: piece, square: { row: row, file: file }, selected: selected, valid: valid, underAttack: underAttack, recent: recent, destination: destination, onMouseDown: () => {\n                            this.onSquareMouseDown({ row: row, file: file });\n                        }, onMouseOver: () => {\n                            this.onSquareHover({ row: row, file: file });\n                        } }, i));\n                }), jsx(\"div\", Object.assign({ style: Object.assign(Object.assign({}, this.draggedChessPieceStyles), { display: this.state.isDragging ? 'block' : 'none' }), ref: this.draggedChessPieceContainer }, { children: jsx(ChessPieceIcon, { piece: this.state.draggedPiece, ref: this.draggedChessPiece }) }))] })));\n    }\n    clearSelectedSquare() {\n        this.setState({\n            selectedSquare: undefined\n        });\n    }\n    setSelectedSquare(square) {\n        this.setState({\n            selectedSquare: square\n        });\n    }\n    onSquareMouseDown(square) {\n        if (!this.props.pieces[square.row][square.file] && !this.state.selectedSquare) {\n            return;\n        }\n        if (this.state.isDragging && !this.state.selectedSquare) {\n            this.setState({\n                isDragging: false\n            });\n            return;\n        }\n        if (this.state.selectedSquare && (this.state.selectedSquare.row != square.row || this.state.selectedSquare.file != square.file)) {\n            if (this.props.pieces[square.row][square.file] && (this.props.pieces[square.row][square.file]).color == (this.props.pieces[this.state.selectedSquare.row][this.state.selectedSquare.file]).color) {\n                this.setState({\n                    willDeselect: false\n                });\n            }\n            else {\n                if (this.props.onMove) {\n                    this.props.onMove({\n                        from: this.state.selectedSquare,\n                        to: square\n                    });\n                }\n                this.clearSelectedSquare();\n                this.clearDestinationSquare();\n                this.setState({\n                    willDeselect: false\n                });\n                return;\n            }\n        }\n        if (!this.state.isDragging) {\n            this.setSelectedSquare(square);\n            this.startDragging(square);\n            this.setDestinationSquare(square);\n            this.updateLegalMoves(square);\n        }\n    }\n    onMouseDown(e) {\n        this.updateDraggedChessPieceLocation(e.nativeEvent);\n    }\n    onMouseUp() {\n        if (this.state.isDragging && !this.state.selectedSquare) {\n            this.setState({\n                isDragging: false\n            });\n            return;\n        }\n        if (!this.state.selectedSquare)\n            return;\n        if (this.state.destinationSquare && this.props.onMove) {\n            if (this.state.destinationSquare.row == this.state.selectedSquare.row && this.state.destinationSquare.file == this.state.selectedSquare.file) {\n                this.stopDragging();\n                if (this.state.willDeselect) {\n                    this.clearSelectedSquare();\n                    this.setState({\n                        willDeselect: false\n                    });\n                }\n                else {\n                    this.setState({\n                        willDeselect: true\n                    });\n                }\n                this.clearDestinationSquare();\n                return;\n            }\n            this.props.onMove({\n                from: this.state.selectedSquare,\n                to: this.state.destinationSquare\n            });\n        }\n        this.clearSelectedSquare();\n        this.clearDestinationSquare();\n        this.stopDragging();\n    }\n    startDragging(square) {\n        this.setState({\n            isDragging: true,\n            draggedPiece: this.props.pieces[square.row][square.file]\n        });\n    }\n    stopDragging() {\n        this.setState({\n            isDragging: false,\n            draggedPiece: undefined\n        });\n    }\n    clearDestinationSquare() {\n        this.setState({\n            destinationSquare: undefined\n        });\n    }\n    setDestinationSquare(square) {\n        this.setState({\n            destinationSquare: square\n        });\n    }\n    onSquareHover(square) {\n        this.setState({\n            hoveredSquare: square\n        });\n        if (this.state.selectedSquare)\n            this.setDestinationSquare(square);\n    }\n    onMouseMove(e) {\n        this.updateDraggedChessPieceLocation(e);\n    }\n    updateDraggedChessPieceLocation(e) {\n        if (this.draggedChessPieceContainer.current == null || this.chessBoardSquares.current == null)\n            return;\n        let draggedChessPiece = this.draggedChessPieceContainer.current;\n        let boardPosition = getElementPosition(this.chessBoardSquares.current);\n        draggedChessPiece.style.left = (e.clientX - boardPosition.x) + 'px';\n        draggedChessPiece.style.top = (e.clientY - boardPosition.y) + 'px';\n    }\n    onMouseOut() {\n        this.clearDestinationSquare();\n    }\n    componentDidMount() {\n        document.addEventListener('mousemove', this.onMouseMove);\n        document.addEventListener('mouseup', this.onMouseUp);\n    }\n    componentWillUnmount() {\n        document.removeEventListener('mousemove', this.onMouseMove);\n        document.removeEventListener('mouseup', this.onMouseUp);\n    }\n    updateLegalMoves(square) {\n        if (this.props.getLegalMoves) {\n            this.setState({\n                legalMoves: this.props.getLegalMoves(square)\n            });\n        }\n        else {\n            this.setState({\n                legalMoves: []\n            });\n        }\n    }\n}\n\nclass ChessBoardPromotionMenu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.backdrop = React.createRef();\n        this.callbacks = [];\n        this.state = {\n            isOpen: false,\n            color: undefined,\n            file: undefined,\n        };\n        this.onSquareHover = this.onSquareHover.bind(this);\n        this.onMouseOut = this.onMouseOut.bind(this);\n        this.onSquareClick = this.onSquareClick.bind(this);\n    }\n    render() {\n        return (jsxs(\"div\", Object.assign({ style: {\n                position: 'absolute',\n                inset: '0px',\n                pointerEvents: this.state.isOpen ? 'auto' : 'none',\n                opacity: this.state.isOpen ? 1 : 0,\n                transition: '0.2s',\n            } }, { children: [jsx(\"div\", { style: {\n                        position: 'absolute',\n                        inset: '0px',\n                        backgroundColor: '#00000088',\n                    }, ref: this.backdrop, onClick: () => {\n                        this.close();\n                        this.returnCallbacks(undefined);\n                    } }), jsxs(\"div\", Object.assign({ style: {\n                        display: 'grid',\n                        gridTemplateColumns: 'repeat(1, 1fr)',\n                        gridTemplateRows: 'repeat(4, 1fr)',\n                        width: (1 / 8 * 100) + '%',\n                        height: (4 / 8 * 100) + '%',\n                        alignItems: 'stretch',\n                        cursor: 'pointer',\n                        position: 'relative',\n                        left: (this.state.file || 0) / 8 * 100 + '%',\n                        top: (this.state.color == ChessColor.WHITE ? 0 : 4) / 8 * 100 + '%',\n                        filter: 'drop-shadow(0px 0px 16px #000000)'\n                    }, onMouseOut: this.onMouseOut }, { children: [jsx(ChessBoardSquare, { square: { row: this.state.color == ChessColor.WHITE ? 0 : 7, file: this.state.file || 0 }, piece: typeof this.state.color == 'number' ? { color: this.state.color, type: ChessPieceType.QUEEN } : undefined, onMouseOver: () => {\n                                this.onSquareHover(0);\n                            }, destination: this.state.selected == 0, onClick: () => {\n                                this.onSquareClick(0);\n                            }, style: { order: this.state.color == ChessColor.WHITE ? 0 : 3 } }), jsx(ChessBoardSquare, { square: { row: this.state.color == ChessColor.WHITE ? 1 : 6, file: this.state.file || 0 }, piece: typeof this.state.color == 'number' ? { color: this.state.color, type: ChessPieceType.KNIGHT } : undefined, onMouseOver: () => {\n                                this.onSquareHover(1);\n                            }, destination: this.state.selected == 1, onClick: () => {\n                                this.onSquareClick(1);\n                            }, style: { order: this.state.color == ChessColor.WHITE ? 1 : 2 } }), jsx(ChessBoardSquare, { square: { row: this.state.color == ChessColor.WHITE ? 2 : 5, file: this.state.file || 0 }, piece: typeof this.state.color == 'number' ? { color: this.state.color, type: ChessPieceType.ROOK } : undefined, onMouseOver: () => {\n                                this.onSquareHover(2);\n                            }, destination: this.state.selected == 2, onClick: () => {\n                                this.onSquareClick(2);\n                            }, style: { order: this.state.color == ChessColor.WHITE ? 2 : 1 } }), jsx(ChessBoardSquare, { square: { row: this.state.color == ChessColor.WHITE ? 3 : 4, file: this.state.file || 0 }, piece: typeof this.state.color == 'number' ? { color: this.state.color, type: ChessPieceType.BISHOP } : undefined, onMouseOver: () => {\n                                this.onSquareHover(3);\n                            }, destination: this.state.selected == 3, onClick: () => {\n                                this.onSquareClick(3);\n                            }, style: { order: this.state.color == ChessColor.WHITE ? 3 : 0 } })] }))] })));\n    }\n    onClick() {\n    }\n    close() {\n        this.setState({\n            isOpen: false,\n        });\n    }\n    onSquareHover(square) {\n        this.setState({\n            selected: square,\n        });\n    }\n    onSquareClick(square) {\n        this.close();\n        this.returnCallbacks([\n            ChessPieceType.QUEEN,\n            ChessPieceType.KNIGHT,\n            ChessPieceType.ROOK,\n            ChessPieceType.BISHOP\n        ][square]);\n    }\n    onMouseOut() {\n        this.setState({\n            selected: undefined,\n        });\n    }\n    returnCallbacks(result) {\n        for (let callback of this.callbacks) {\n            callback(result);\n        }\n        this.callbacks = [];\n    }\n    open(color, file, callback) {\n        this.callbacks.push(callback);\n        this.setState({\n            isOpen: true,\n            color: color,\n            file: file,\n        });\n    }\n    openAsync(color, file) {\n        return new Promise((resolve) => {\n            this.open(color, file, resolve);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright (c) 2023, Jeff Hlywa (jhlywa@gmail.com)\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\nconst WHITE = 'w';\nconst BLACK = 'b';\nconst PAWN = 'p';\nconst KNIGHT = 'n';\nconst BISHOP = 'b';\nconst ROOK = 'r';\nconst QUEEN = 'q';\nconst KING = 'k';\nconst DEFAULT_POSITION = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\nconst EMPTY = -1;\nconst FLAGS = {\n    NORMAL: 'n',\n    CAPTURE: 'c',\n    BIG_PAWN: 'b',\n    EP_CAPTURE: 'e',\n    PROMOTION: 'p',\n    KSIDE_CASTLE: 'k',\n    QSIDE_CASTLE: 'q',\n};\nconst BITS = {\n    NORMAL: 1,\n    CAPTURE: 2,\n    BIG_PAWN: 4,\n    EP_CAPTURE: 8,\n    PROMOTION: 16,\n    KSIDE_CASTLE: 32,\n    QSIDE_CASTLE: 64,\n};\n/*\n * NOTES ABOUT 0x88 MOVE GENERATION ALGORITHM\n * ----------------------------------------------------------------------------\n * From https://github.com/jhlywa/chess.js/issues/230\n *\n * A lot of people are confused when they first see the internal representation\n * of chess.js. It uses the 0x88 Move Generation Algorithm which internally\n * stores the board as an 8x16 array. This is purely for efficiency but has a\n * couple of interesting benefits:\n *\n * 1. 0x88 offers a very inexpensive \"off the board\" check. Bitwise AND (&) any\n *    square with 0x88, if the result is non-zero then the square is off the\n *    board. For example, assuming a knight square A8 (0 in 0x88 notation),\n *    there are 8 possible directions in which the knight can move. These\n *    directions are relative to the 8x16 board and are stored in the\n *    PIECE_OFFSETS map. One possible move is A8 - 18 (up one square, and two\n *    squares to the left - which is off the board). 0 - 18 = -18 & 0x88 = 0x88\n *    (because of two-complement representation of -18). The non-zero result\n *    means the square is off the board and the move is illegal. Take the\n *    opposite move (from A8 to C7), 0 + 18 = 18 & 0x88 = 0. A result of zero\n *    means the square is on the board.\n *\n * 2. The relative distance (or difference) between two squares on a 8x16 board\n *    is unique and can be used to inexpensively determine if a piece on a\n *    square can attack any other arbitrary square. For example, let's see if a\n *    pawn on E7 can attack E2. The difference between E7 (20) - E2 (100) is\n *    -80. We add 119 to make the ATTACKS array index non-negative (because the\n *    worst case difference is A8 - H1 = -119). The ATTACKS array contains a\n *    bitmask of pieces that can attack from that distance and direction.\n *    ATTACKS[-80 + 119=39] gives us 24 or 0b11000 in binary. Look at the\n *    PIECE_MASKS map to determine the mask for a given piece type. In our pawn\n *    example, we would check to see if 24 & 0x1 is non-zero, which it is\n *    not. So, naturally, a pawn on E7 can't attack a piece on E2. However, a\n *    rook can since 24 & 0x8 is non-zero. The only thing left to check is that\n *    there are no blocking pieces between E7 and E2. That's where the RAYS\n *    array comes in. It provides an offset (in this case 16) to add to E7 (20)\n *    to check for blocking pieces. E7 (20) + 16 = E6 (36) + 16 = E5 (52) etc.\n */\n// prettier-ignore\n// eslint-disable-next-line\nconst Ox88 = {\n    a8: 0, b8: 1, c8: 2, d8: 3, e8: 4, f8: 5, g8: 6, h8: 7,\n    a7: 16, b7: 17, c7: 18, d7: 19, e7: 20, f7: 21, g7: 22, h7: 23,\n    a6: 32, b6: 33, c6: 34, d6: 35, e6: 36, f6: 37, g6: 38, h6: 39,\n    a5: 48, b5: 49, c5: 50, d5: 51, e5: 52, f5: 53, g5: 54, h5: 55,\n    a4: 64, b4: 65, c4: 66, d4: 67, e4: 68, f4: 69, g4: 70, h4: 71,\n    a3: 80, b3: 81, c3: 82, d3: 83, e3: 84, f3: 85, g3: 86, h3: 87,\n    a2: 96, b2: 97, c2: 98, d2: 99, e2: 100, f2: 101, g2: 102, h2: 103,\n    a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\n};\nconst PAWN_OFFSETS = {\n    b: [16, 32, 17, 15],\n    w: [-16, -32, -17, -15],\n};\nconst PIECE_OFFSETS = {\n    n: [-18, -33, -31, -14, 18, 33, 31, 14],\n    b: [-17, -15, 17, 15],\n    r: [-16, 1, 16, -1],\n    q: [-17, -16, -15, 1, 17, 16, 15, -1],\n    k: [-17, -16, -15, 1, 17, 16, 15, -1],\n};\n// prettier-ignore\nconst ATTACKS = [\n    20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20, 0,\n    0, 20, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 20, 0, 0,\n    0, 0, 20, 0, 0, 0, 0, 24, 0, 0, 0, 0, 20, 0, 0, 0,\n    0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0,\n    0, 0, 0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 20, 2, 24, 2, 20, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n    24, 24, 24, 24, 24, 24, 56, 0, 56, 24, 24, 24, 24, 24, 24, 0,\n    0, 0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 20, 2, 24, 2, 20, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0, 0, 0, 0,\n    0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0,\n    0, 0, 20, 0, 0, 0, 0, 24, 0, 0, 0, 0, 20, 0, 0, 0,\n    0, 20, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 20, 0, 0,\n    20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20\n];\n// prettier-ignore\nconst RAYS = [\n    17, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 15, 0,\n    0, 17, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 15, 0, 0,\n    0, 0, 17, 0, 0, 0, 0, 16, 0, 0, 0, 0, 15, 0, 0, 0,\n    0, 0, 0, 17, 0, 0, 0, 16, 0, 0, 0, 15, 0, 0, 0, 0,\n    0, 0, 0, 0, 17, 0, 0, 16, 0, 0, 15, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 17, 0, 16, 0, 15, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 17, 16, 15, 0, 0, 0, 0, 0, 0, 0,\n    1, 1, 1, 1, 1, 1, 1, 0, -1, -1, -1, -1, -1, -1, -1, 0,\n    0, 0, 0, 0, 0, 0, -15, -16, -17, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, -15, 0, -16, 0, -17, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, -15, 0, 0, -16, 0, 0, -17, 0, 0, 0, 0, 0,\n    0, 0, 0, -15, 0, 0, 0, -16, 0, 0, 0, -17, 0, 0, 0, 0,\n    0, 0, -15, 0, 0, 0, 0, -16, 0, 0, 0, 0, -17, 0, 0, 0,\n    0, -15, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, -17, 0, 0,\n    -15, 0, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, 0, -17\n];\nconst PIECE_MASKS = { p: 0x1, n: 0x2, b: 0x4, r: 0x8, q: 0x10, k: 0x20 };\nconst SYMBOLS = 'pnbrqkPNBRQK';\nconst PROMOTIONS = [KNIGHT, BISHOP, ROOK, QUEEN];\nconst RANK_1 = 7;\nconst RANK_2 = 6;\n/*\n * const RANK_3 = 5\n * const RANK_4 = 4\n * const RANK_5 = 3\n * const RANK_6 = 2\n */\nconst RANK_7 = 1;\nconst RANK_8 = 0;\nconst ROOKS = {\n    w: [\n        { square: Ox88.a1, flag: BITS.QSIDE_CASTLE },\n        { square: Ox88.h1, flag: BITS.KSIDE_CASTLE },\n    ],\n    b: [\n        { square: Ox88.a8, flag: BITS.QSIDE_CASTLE },\n        { square: Ox88.h8, flag: BITS.KSIDE_CASTLE },\n    ],\n};\nconst SECOND_RANK = { b: RANK_7, w: RANK_2 };\nconst TERMINATION_MARKERS = ['1-0', '0-1', '1/2-1/2', '*'];\n// Extracts the zero-based rank of an 0x88 square.\nfunction rank(square) {\n    return square >> 4;\n}\n// Extracts the zero-based file of an 0x88 square.\nfunction file(square) {\n    return square & 0xf;\n}\nfunction isDigit(c) {\n    return '0123456789'.indexOf(c) !== -1;\n}\n// Converts a 0x88 square to algebraic notation.\nfunction algebraic(square) {\n    const f = file(square);\n    const r = rank(square);\n    return ('abcdefgh'.substring(f, f + 1) +\n        '87654321'.substring(r, r + 1));\n}\nfunction swapColor(color) {\n    return color === WHITE ? BLACK : WHITE;\n}\nfunction validateFen(fen) {\n    // 1st criterion: 6 space-seperated fields?\n    const tokens = fen.split(/\\s+/);\n    if (tokens.length !== 6) {\n        return {\n            ok: false,\n            error: 'Invalid FEN: must contain six space-delimited fields',\n        };\n    }\n    // 2nd criterion: move number field is a integer value > 0?\n    const moveNumber = parseInt(tokens[5], 10);\n    if (isNaN(moveNumber) || moveNumber <= 0) {\n        return {\n            ok: false,\n            error: 'Invalid FEN: move number must be a positive integer',\n        };\n    }\n    // 3rd criterion: half move counter is an integer >= 0?\n    const halfMoves = parseInt(tokens[4], 10);\n    if (isNaN(halfMoves) || halfMoves < 0) {\n        return {\n            ok: false,\n            error: 'Invalid FEN: half move counter number must be a non-negative integer',\n        };\n    }\n    // 4th criterion: 4th field is a valid e.p.-string?\n    if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n        return { ok: false, error: 'Invalid FEN: en-passant square is invalid' };\n    }\n    // 5th criterion: 3th field is a valid castle-string?\n    if (/[^kKqQ-]/.test(tokens[2])) {\n        return { ok: false, error: 'Invalid FEN: castling availability is invalid' };\n    }\n    // 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)?\n    if (!/^(w|b)$/.test(tokens[1])) {\n        return { ok: false, error: 'Invalid FEN: side-to-move is invalid' };\n    }\n    // 7th criterion: 1st field contains 8 rows?\n    const rows = tokens[0].split('/');\n    if (rows.length !== 8) {\n        return {\n            ok: false,\n            error: \"Invalid FEN: piece data does not contain 8 '/'-delimited rows\",\n        };\n    }\n    // 8th criterion: every row is valid?\n    for (let i = 0; i < rows.length; i++) {\n        // check for right sum of fields AND not two numbers in succession\n        let sumFields = 0;\n        let previousWasNumber = false;\n        for (let k = 0; k < rows[i].length; k++) {\n            if (isDigit(rows[i][k])) {\n                if (previousWasNumber) {\n                    return {\n                        ok: false,\n                        error: 'Invalid FEN: piece data is invalid (consecutive number)',\n                    };\n                }\n                sumFields += parseInt(rows[i][k], 10);\n                previousWasNumber = true;\n            }\n            else {\n                if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n                    return {\n                        ok: false,\n                        error: 'Invalid FEN: piece data is invalid (invalid piece)',\n                    };\n                }\n                sumFields += 1;\n                previousWasNumber = false;\n            }\n        }\n        if (sumFields !== 8) {\n            return {\n                ok: false,\n                error: 'Invalid FEN: piece data is invalid (too many squares in rank)',\n            };\n        }\n    }\n    if ((tokens[3][1] == '3' && tokens[1] == 'w') ||\n        (tokens[3][1] == '6' && tokens[1] == 'b')) {\n        return { ok: false, error: 'Invalid FEN: illegal en-passant square' };\n    }\n    const kings = [\n        { color: 'white', regex: /K/g },\n        { color: 'black', regex: /k/g },\n    ];\n    for (const { color, regex } of kings) {\n        if (!regex.test(tokens[0])) {\n            return { ok: false, error: `Invalid FEN: missing ${color} king` };\n        }\n        if ((tokens[0].match(regex) || []).length > 1) {\n            return { ok: false, error: `Invalid FEN: too many ${color} kings` };\n        }\n    }\n    return { ok: true };\n}\n// this function is used to uniquely identify ambiguous moves\nfunction getDisambiguator(move, moves) {\n    const from = move.from;\n    const to = move.to;\n    const piece = move.piece;\n    let ambiguities = 0;\n    let sameRank = 0;\n    let sameFile = 0;\n    for (let i = 0, len = moves.length; i < len; i++) {\n        const ambigFrom = moves[i].from;\n        const ambigTo = moves[i].to;\n        const ambigPiece = moves[i].piece;\n        /*\n         * if a move of the same piece type ends on the same to square, we'll need\n         * to add a disambiguator to the algebraic notation\n         */\n        if (piece === ambigPiece && from !== ambigFrom && to === ambigTo) {\n            ambiguities++;\n            if (rank(from) === rank(ambigFrom)) {\n                sameRank++;\n            }\n            if (file(from) === file(ambigFrom)) {\n                sameFile++;\n            }\n        }\n    }\n    if (ambiguities > 0) {\n        if (sameRank > 0 && sameFile > 0) {\n            /*\n             * if there exists a similar moving piece on the same rank and file as\n             * the move in question, use the square as the disambiguator\n             */\n            return algebraic(from);\n        }\n        else if (sameFile > 0) {\n            /*\n             * if the moving piece rests on the same file, use the rank symbol as the\n             * disambiguator\n             */\n            return algebraic(from).charAt(1);\n        }\n        else {\n            // else use the file symbol\n            return algebraic(from).charAt(0);\n        }\n    }\n    return '';\n}\nfunction addMove(moves, color, from, to, piece, captured = undefined, flags = BITS.NORMAL) {\n    const r = rank(to);\n    if (piece === PAWN && (r === RANK_1 || r === RANK_8)) {\n        for (let i = 0; i < PROMOTIONS.length; i++) {\n            const promotion = PROMOTIONS[i];\n            moves.push({\n                color,\n                from,\n                to,\n                piece,\n                captured,\n                promotion,\n                flags: flags | BITS.PROMOTION,\n            });\n        }\n    }\n    else {\n        moves.push({\n            color,\n            from,\n            to,\n            piece,\n            captured,\n            flags,\n        });\n    }\n}\nfunction inferPieceType(san) {\n    let pieceType = san.charAt(0);\n    if (pieceType >= 'a' && pieceType <= 'h') {\n        const matches = san.match(/[a-h]\\d.*[a-h]\\d/);\n        if (matches) {\n            return undefined;\n        }\n        return PAWN;\n    }\n    pieceType = pieceType.toLowerCase();\n    if (pieceType === 'o') {\n        return KING;\n    }\n    return pieceType;\n}\n// parses all of the decorators out of a SAN string\nfunction strippedSan(move) {\n    return move.replace(/=/, '').replace(/[+#]?[?!]*$/, '');\n}\nclass Chess {\n    constructor(fen = DEFAULT_POSITION) {\n        this._board = new Array(128);\n        this._turn = WHITE;\n        this._header = {};\n        this._kings = { w: EMPTY, b: EMPTY };\n        this._epSquare = -1;\n        this._halfMoves = 0;\n        this._moveNumber = 0;\n        this._history = [];\n        this._comments = {};\n        this._castling = { w: 0, b: 0 };\n        this.load(fen);\n    }\n    clear(keepHeaders = false) {\n        this._board = new Array(128);\n        this._kings = { w: EMPTY, b: EMPTY };\n        this._turn = WHITE;\n        this._castling = { w: 0, b: 0 };\n        this._epSquare = EMPTY;\n        this._halfMoves = 0;\n        this._moveNumber = 1;\n        this._history = [];\n        this._comments = {};\n        this._header = keepHeaders ? this._header : {};\n        this._updateSetup(this.fen());\n    }\n    load(fen, keepHeaders = false) {\n        let tokens = fen.split(/\\s+/);\n        // append commonly omitted fen tokens\n        if (tokens.length >= 2 && tokens.length < 6) {\n            const adjustments = ['-', '-', '0', '1'];\n            fen = tokens.concat(adjustments.slice(-(6 - tokens.length))).join(' ');\n        }\n        tokens = fen.split(/\\s+/);\n        const { ok, error } = validateFen(fen);\n        if (!ok) {\n            throw new Error(error);\n        }\n        const position = tokens[0];\n        let square = 0;\n        this.clear(keepHeaders);\n        for (let i = 0; i < position.length; i++) {\n            const piece = position.charAt(i);\n            if (piece === '/') {\n                square += 8;\n            }\n            else if (isDigit(piece)) {\n                square += parseInt(piece, 10);\n            }\n            else {\n                const color = piece < 'a' ? WHITE : BLACK;\n                this.put({ type: piece.toLowerCase(), color }, algebraic(square));\n                square++;\n            }\n        }\n        this._turn = tokens[1];\n        if (tokens[2].indexOf('K') > -1) {\n            this._castling.w |= BITS.KSIDE_CASTLE;\n        }\n        if (tokens[2].indexOf('Q') > -1) {\n            this._castling.w |= BITS.QSIDE_CASTLE;\n        }\n        if (tokens[2].indexOf('k') > -1) {\n            this._castling.b |= BITS.KSIDE_CASTLE;\n        }\n        if (tokens[2].indexOf('q') > -1) {\n            this._castling.b |= BITS.QSIDE_CASTLE;\n        }\n        this._epSquare = tokens[3] === '-' ? EMPTY : Ox88[tokens[3]];\n        this._halfMoves = parseInt(tokens[4], 10);\n        this._moveNumber = parseInt(tokens[5], 10);\n        this._updateSetup(this.fen());\n    }\n    fen() {\n        var _a, _b;\n        let empty = 0;\n        let fen = '';\n        for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n            if (this._board[i]) {\n                if (empty > 0) {\n                    fen += empty;\n                    empty = 0;\n                }\n                const { color, type: piece } = this._board[i];\n                fen += color === WHITE ? piece.toUpperCase() : piece.toLowerCase();\n            }\n            else {\n                empty++;\n            }\n            if ((i + 1) & 0x88) {\n                if (empty > 0) {\n                    fen += empty;\n                }\n                if (i !== Ox88.h1) {\n                    fen += '/';\n                }\n                empty = 0;\n                i += 8;\n            }\n        }\n        let castling = '';\n        if (this._castling[WHITE] & BITS.KSIDE_CASTLE) {\n            castling += 'K';\n        }\n        if (this._castling[WHITE] & BITS.QSIDE_CASTLE) {\n            castling += 'Q';\n        }\n        if (this._castling[BLACK] & BITS.KSIDE_CASTLE) {\n            castling += 'k';\n        }\n        if (this._castling[BLACK] & BITS.QSIDE_CASTLE) {\n            castling += 'q';\n        }\n        // do we have an empty castling flag?\n        castling = castling || '-';\n        let epSquare = '-';\n        /*\n         * only print the ep square if en passant is a valid move (pawn is present\n         * and ep capture is not pinned)\n         */\n        if (this._epSquare !== EMPTY) {\n            const bigPawnSquare = this._epSquare + (this._turn === WHITE ? 16 : -16);\n            const squares = [bigPawnSquare + 1, bigPawnSquare - 1];\n            for (const square of squares) {\n                // is the square off the board?\n                if (square & 0x88) {\n                    continue;\n                }\n                const color = this._turn;\n                // is there a pawn that can capture the epSquare?\n                if (((_a = this._board[square]) === null || _a === void 0 ? void 0 : _a.color) === color &&\n                    ((_b = this._board[square]) === null || _b === void 0 ? void 0 : _b.type) === PAWN) {\n                    // if the pawn makes an ep capture, does it leave it's king in check?\n                    this._makeMove({\n                        color,\n                        from: square,\n                        to: this._epSquare,\n                        piece: PAWN,\n                        captured: PAWN,\n                        flags: BITS.EP_CAPTURE,\n                    });\n                    const isLegal = !this._isKingAttacked(color);\n                    this._undoMove();\n                    // if ep is legal, break and set the ep square in the FEN output\n                    if (isLegal) {\n                        epSquare = algebraic(this._epSquare);\n                        break;\n                    }\n                }\n            }\n        }\n        return [\n            fen,\n            this._turn,\n            castling,\n            epSquare,\n            this._halfMoves,\n            this._moveNumber,\n        ].join(' ');\n    }\n    /*\n     * Called when the initial board setup is changed with put() or remove().\n     * modifies the SetUp and FEN properties of the header object. If the FEN\n     * is equal to the default position, the SetUp and FEN are deleted the setup\n     * is only updated if history.length is zero, ie moves haven't been made.\n     */\n    _updateSetup(fen) {\n        if (this._history.length > 0)\n            return;\n        if (fen !== DEFAULT_POSITION) {\n            this._header['SetUp'] = '1';\n            this._header['FEN'] = fen;\n        }\n        else {\n            delete this._header['SetUp'];\n            delete this._header['FEN'];\n        }\n    }\n    reset() {\n        this.load(DEFAULT_POSITION);\n    }\n    get(square) {\n        return this._board[Ox88[square]] || false;\n    }\n    put({ type, color }, square) {\n        // check for piece\n        if (SYMBOLS.indexOf(type.toLowerCase()) === -1) {\n            return false;\n        }\n        // check for valid square\n        if (!(square in Ox88)) {\n            return false;\n        }\n        const sq = Ox88[square];\n        // don't let the user place more than one king\n        if (type == KING &&\n            !(this._kings[color] == EMPTY || this._kings[color] == sq)) {\n            return false;\n        }\n        this._board[sq] = { type: type, color: color };\n        if (type === KING) {\n            this._kings[color] = sq;\n        }\n        this._updateSetup(this.fen());\n        return true;\n    }\n    remove(square) {\n        const piece = this.get(square);\n        delete this._board[Ox88[square]];\n        if (piece && piece.type === KING) {\n            this._kings[piece.color] = EMPTY;\n        }\n        this._updateSetup(this.fen());\n        return piece;\n    }\n    _attacked(color, square) {\n        for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n            // did we run off the end of the board\n            if (i & 0x88) {\n                i += 7;\n                continue;\n            }\n            // if empty square or wrong color\n            if (this._board[i] === undefined || this._board[i].color !== color) {\n                continue;\n            }\n            const piece = this._board[i];\n            const difference = i - square;\n            // skip - to/from square are the same\n            if (difference === 0) {\n                continue;\n            }\n            const index = difference + 119;\n            if (ATTACKS[index] & PIECE_MASKS[piece.type]) {\n                if (piece.type === PAWN) {\n                    if (difference > 0) {\n                        if (piece.color === WHITE)\n                            return true;\n                    }\n                    else {\n                        if (piece.color === BLACK)\n                            return true;\n                    }\n                    continue;\n                }\n                // if the piece is a knight or a king\n                if (piece.type === 'n' || piece.type === 'k')\n                    return true;\n                const offset = RAYS[index];\n                let j = i + offset;\n                let blocked = false;\n                while (j !== square) {\n                    if (this._board[j] != null) {\n                        blocked = true;\n                        break;\n                    }\n                    j += offset;\n                }\n                if (!blocked)\n                    return true;\n            }\n        }\n        return false;\n    }\n    _isKingAttacked(color) {\n        return this._attacked(swapColor(color), this._kings[color]);\n    }\n    isAttacked(square, attackedBy) {\n        return this._attacked(attackedBy, Ox88[square]);\n    }\n    isCheck() {\n        return this._isKingAttacked(this._turn);\n    }\n    inCheck() {\n        return this.isCheck();\n    }\n    isCheckmate() {\n        return this.isCheck() && this._moves().length === 0;\n    }\n    isStalemate() {\n        return !this.isCheck() && this._moves().length === 0;\n    }\n    isInsufficientMaterial() {\n        /*\n         * k.b. vs k.b. (of opposite colors) with mate in 1:\n         * 8/8/8/8/1b6/8/B1k5/K7 b - - 0 1\n         *\n         * k.b. vs k.n. with mate in 1:\n         * 8/8/8/8/1n6/8/B7/K1k5 b - - 2 1\n         */\n        const pieces = {\n            b: 0,\n            n: 0,\n            r: 0,\n            q: 0,\n            k: 0,\n            p: 0,\n        };\n        const bishops = [];\n        let numPieces = 0;\n        let squareColor = 0;\n        for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n            squareColor = (squareColor + 1) % 2;\n            if (i & 0x88) {\n                i += 7;\n                continue;\n            }\n            const piece = this._board[i];\n            if (piece) {\n                pieces[piece.type] = piece.type in pieces ? pieces[piece.type] + 1 : 1;\n                if (piece.type === BISHOP) {\n                    bishops.push(squareColor);\n                }\n                numPieces++;\n            }\n        }\n        // k vs. k\n        if (numPieces === 2) {\n            return true;\n        }\n        else if (\n        // k vs. kn .... or .... k vs. kb\n        numPieces === 3 &&\n            (pieces[BISHOP] === 1 || pieces[KNIGHT] === 1)) {\n            return true;\n        }\n        else if (numPieces === pieces[BISHOP] + 2) {\n            // kb vs. kb where any number of bishops are all on the same color\n            let sum = 0;\n            const len = bishops.length;\n            for (let i = 0; i < len; i++) {\n                sum += bishops[i];\n            }\n            if (sum === 0 || sum === len) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isThreefoldRepetition() {\n        const moves = [];\n        const positions = {};\n        let repetition = false;\n        while (true) {\n            const move = this._undoMove();\n            if (!move)\n                break;\n            moves.push(move);\n        }\n        while (true) {\n            /*\n             * remove the last two fields in the FEN string, they're not needed when\n             * checking for draw by rep\n             */\n            const fen = this.fen().split(' ').slice(0, 4).join(' ');\n            // has the position occurred three or move times\n            positions[fen] = fen in positions ? positions[fen] + 1 : 1;\n            if (positions[fen] >= 3) {\n                repetition = true;\n            }\n            const move = moves.pop();\n            if (!move) {\n                break;\n            }\n            else {\n                this._makeMove(move);\n            }\n        }\n        return repetition;\n    }\n    isDraw() {\n        return (this._halfMoves >= 100 || // 50 moves per side = 100 half moves\n            this.isStalemate() ||\n            this.isInsufficientMaterial() ||\n            this.isThreefoldRepetition());\n    }\n    isGameOver() {\n        return this.isCheckmate() || this.isStalemate() || this.isDraw();\n    }\n    moves({ verbose = false, square = undefined, piece = undefined, } = {}) {\n        const moves = this._moves({ square, piece });\n        if (verbose) {\n            return moves.map((move) => this._makePretty(move));\n        }\n        else {\n            return moves.map((move) => this._moveToSan(move, moves));\n        }\n    }\n    _moves({ legal = true, piece = undefined, square = undefined, } = {}) {\n        var _a;\n        const forSquare = square ? square.toLowerCase() : undefined;\n        const forPiece = piece === null || piece === void 0 ? void 0 : piece.toLowerCase();\n        const moves = [];\n        const us = this._turn;\n        const them = swapColor(us);\n        let firstSquare = Ox88.a8;\n        let lastSquare = Ox88.h1;\n        let singleSquare = false;\n        // are we generating moves for a single square?\n        if (forSquare) {\n            // illegal square, return empty moves\n            if (!(forSquare in Ox88)) {\n                return [];\n            }\n            else {\n                firstSquare = lastSquare = Ox88[forSquare];\n                singleSquare = true;\n            }\n        }\n        for (let from = firstSquare; from <= lastSquare; from++) {\n            // did we run off the end of the board\n            if (from & 0x88) {\n                from += 7;\n                continue;\n            }\n            // empty square or opponent, skip\n            if (!this._board[from] || this._board[from].color === them) {\n                continue;\n            }\n            const { type } = this._board[from];\n            let to;\n            if (type === PAWN) {\n                if (forPiece && forPiece !== type)\n                    continue;\n                // single square, non-capturing\n                to = from + PAWN_OFFSETS[us][0];\n                if (!this._board[to]) {\n                    addMove(moves, us, from, to, PAWN);\n                    // double square\n                    to = from + PAWN_OFFSETS[us][1];\n                    if (SECOND_RANK[us] === rank(from) && !this._board[to]) {\n                        addMove(moves, us, from, to, PAWN, undefined, BITS.BIG_PAWN);\n                    }\n                }\n                // pawn captures\n                for (let j = 2; j < 4; j++) {\n                    to = from + PAWN_OFFSETS[us][j];\n                    if (to & 0x88)\n                        continue;\n                    if (((_a = this._board[to]) === null || _a === void 0 ? void 0 : _a.color) === them) {\n                        addMove(moves, us, from, to, PAWN, this._board[to].type, BITS.CAPTURE);\n                    }\n                    else if (to === this._epSquare) {\n                        addMove(moves, us, from, to, PAWN, PAWN, BITS.EP_CAPTURE);\n                    }\n                }\n            }\n            else {\n                if (forPiece && forPiece !== type)\n                    continue;\n                for (let j = 0, len = PIECE_OFFSETS[type].length; j < len; j++) {\n                    const offset = PIECE_OFFSETS[type][j];\n                    to = from;\n                    while (true) {\n                        to += offset;\n                        if (to & 0x88)\n                            break;\n                        if (!this._board[to]) {\n                            addMove(moves, us, from, to, type);\n                        }\n                        else {\n                            // own color, stop loop\n                            if (this._board[to].color === us)\n                                break;\n                            addMove(moves, us, from, to, type, this._board[to].type, BITS.CAPTURE);\n                            break;\n                        }\n                        /* break, if knight or king */\n                        if (type === KNIGHT || type === KING)\n                            break;\n                    }\n                }\n            }\n        }\n        /*\n         * check for castling if we're:\n         *   a) generating all moves, or\n         *   b) doing single square move generation on the king's square\n         */\n        if (forPiece === undefined || forPiece === KING) {\n            if (!singleSquare || lastSquare === this._kings[us]) {\n                // king-side castling\n                if (this._castling[us] & BITS.KSIDE_CASTLE) {\n                    const castlingFrom = this._kings[us];\n                    const castlingTo = castlingFrom + 2;\n                    if (!this._board[castlingFrom + 1] &&\n                        !this._board[castlingTo] &&\n                        !this._attacked(them, this._kings[us]) &&\n                        !this._attacked(them, castlingFrom + 1) &&\n                        !this._attacked(them, castlingTo)) {\n                        addMove(moves, us, this._kings[us], castlingTo, KING, undefined, BITS.KSIDE_CASTLE);\n                    }\n                }\n                // queen-side castling\n                if (this._castling[us] & BITS.QSIDE_CASTLE) {\n                    const castlingFrom = this._kings[us];\n                    const castlingTo = castlingFrom - 2;\n                    if (!this._board[castlingFrom - 1] &&\n                        !this._board[castlingFrom - 2] &&\n                        !this._board[castlingFrom - 3] &&\n                        !this._attacked(them, this._kings[us]) &&\n                        !this._attacked(them, castlingFrom - 1) &&\n                        !this._attacked(them, castlingTo)) {\n                        addMove(moves, us, this._kings[us], castlingTo, KING, undefined, BITS.QSIDE_CASTLE);\n                    }\n                }\n            }\n        }\n        /*\n         * return all pseudo-legal moves (this includes moves that allow the king\n         * to be captured)\n         */\n        if (!legal) {\n            return moves;\n        }\n        // filter out illegal moves\n        const legalMoves = [];\n        for (let i = 0, len = moves.length; i < len; i++) {\n            this._makeMove(moves[i]);\n            if (!this._isKingAttacked(us)) {\n                legalMoves.push(moves[i]);\n            }\n            this._undoMove();\n        }\n        return legalMoves;\n    }\n    move(move, { strict = false } = {}) {\n        /*\n         * The move function can be called with in the following parameters:\n         *\n         * .move('Nxb7')       <- argument is a case-sensitive SAN string\n         *\n         * .move({ from: 'h7', <- argument is a move object\n         *         to :'h8',\n         *         promotion: 'q' })\n         *\n         *\n         * An optional strict argument may be supplied to tell chess.js to\n         * strictly follow the SAN specification.\n         */\n        let moveObj = null;\n        if (typeof move === 'string') {\n            moveObj = this._moveFromSan(move, strict);\n        }\n        else if (typeof move === 'object') {\n            const moves = this._moves();\n            // convert the pretty move object to an ugly move object\n            for (let i = 0, len = moves.length; i < len; i++) {\n                if (move.from === algebraic(moves[i].from) &&\n                    move.to === algebraic(moves[i].to) &&\n                    (!('promotion' in moves[i]) || move.promotion === moves[i].promotion)) {\n                    moveObj = moves[i];\n                    break;\n                }\n            }\n        }\n        // failed to find move\n        if (!moveObj) {\n            if (typeof move === 'string') {\n                throw new Error(`Invalid move: ${move}`);\n            }\n            else {\n                throw new Error(`Invalid move: ${JSON.stringify(move)}`);\n            }\n        }\n        /*\n         * need to make a copy of move because we can't generate SAN after the move\n         * is made\n         */\n        const prettyMove = this._makePretty(moveObj);\n        this._makeMove(moveObj);\n        return prettyMove;\n    }\n    _push(move) {\n        this._history.push({\n            move,\n            kings: { b: this._kings.b, w: this._kings.w },\n            turn: this._turn,\n            castling: { b: this._castling.b, w: this._castling.w },\n            epSquare: this._epSquare,\n            halfMoves: this._halfMoves,\n            moveNumber: this._moveNumber,\n        });\n    }\n    _makeMove(move) {\n        const us = this._turn;\n        const them = swapColor(us);\n        this._push(move);\n        this._board[move.to] = this._board[move.from];\n        delete this._board[move.from];\n        // if ep capture, remove the captured pawn\n        if (move.flags & BITS.EP_CAPTURE) {\n            if (this._turn === BLACK) {\n                delete this._board[move.to - 16];\n            }\n            else {\n                delete this._board[move.to + 16];\n            }\n        }\n        // if pawn promotion, replace with new piece\n        if (move.promotion) {\n            this._board[move.to] = { type: move.promotion, color: us };\n        }\n        // if we moved the king\n        if (this._board[move.to].type === KING) {\n            this._kings[us] = move.to;\n            // if we castled, move the rook next to the king\n            if (move.flags & BITS.KSIDE_CASTLE) {\n                const castlingTo = move.to - 1;\n                const castlingFrom = move.to + 1;\n                this._board[castlingTo] = this._board[castlingFrom];\n                delete this._board[castlingFrom];\n            }\n            else if (move.flags & BITS.QSIDE_CASTLE) {\n                const castlingTo = move.to + 1;\n                const castlingFrom = move.to - 2;\n                this._board[castlingTo] = this._board[castlingFrom];\n                delete this._board[castlingFrom];\n            }\n            // turn off castling\n            this._castling[us] = 0;\n        }\n        // turn off castling if we move a rook\n        if (this._castling[us]) {\n            for (let i = 0, len = ROOKS[us].length; i < len; i++) {\n                if (move.from === ROOKS[us][i].square &&\n                    this._castling[us] & ROOKS[us][i].flag) {\n                    this._castling[us] ^= ROOKS[us][i].flag;\n                    break;\n                }\n            }\n        }\n        // turn off castling if we capture a rook\n        if (this._castling[them]) {\n            for (let i = 0, len = ROOKS[them].length; i < len; i++) {\n                if (move.to === ROOKS[them][i].square &&\n                    this._castling[them] & ROOKS[them][i].flag) {\n                    this._castling[them] ^= ROOKS[them][i].flag;\n                    break;\n                }\n            }\n        }\n        // if big pawn move, update the en passant square\n        if (move.flags & BITS.BIG_PAWN) {\n            if (us === BLACK) {\n                this._epSquare = move.to - 16;\n            }\n            else {\n                this._epSquare = move.to + 16;\n            }\n        }\n        else {\n            this._epSquare = EMPTY;\n        }\n        // reset the 50 move counter if a pawn is moved or a piece is captured\n        if (move.piece === PAWN) {\n            this._halfMoves = 0;\n        }\n        else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n            this._halfMoves = 0;\n        }\n        else {\n            this._halfMoves++;\n        }\n        if (us === BLACK) {\n            this._moveNumber++;\n        }\n        this._turn = them;\n    }\n    undo() {\n        const move = this._undoMove();\n        return move ? this._makePretty(move) : null;\n    }\n    _undoMove() {\n        const old = this._history.pop();\n        if (old === undefined) {\n            return null;\n        }\n        const move = old.move;\n        this._kings = old.kings;\n        this._turn = old.turn;\n        this._castling = old.castling;\n        this._epSquare = old.epSquare;\n        this._halfMoves = old.halfMoves;\n        this._moveNumber = old.moveNumber;\n        const us = this._turn;\n        const them = swapColor(us);\n        this._board[move.from] = this._board[move.to];\n        this._board[move.from].type = move.piece; // to undo any promotions\n        delete this._board[move.to];\n        if (move.captured) {\n            if (move.flags & BITS.EP_CAPTURE) {\n                // en passant capture\n                let index;\n                if (us === BLACK) {\n                    index = move.to - 16;\n                }\n                else {\n                    index = move.to + 16;\n                }\n                this._board[index] = { type: PAWN, color: them };\n            }\n            else {\n                // regular capture\n                this._board[move.to] = { type: move.captured, color: them };\n            }\n        }\n        if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n            let castlingTo, castlingFrom;\n            if (move.flags & BITS.KSIDE_CASTLE) {\n                castlingTo = move.to + 1;\n                castlingFrom = move.to - 1;\n            }\n            else {\n                castlingTo = move.to - 2;\n                castlingFrom = move.to + 1;\n            }\n            this._board[castlingTo] = this._board[castlingFrom];\n            delete this._board[castlingFrom];\n        }\n        return move;\n    }\n    pgn({ newline = '\\n', maxWidth = 0, } = {}) {\n        /*\n         * using the specification from http://www.chessclub.com/help/PGN-spec\n         * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n         */\n        const result = [];\n        let headerExists = false;\n        /* add the PGN header information */\n        for (const i in this._header) {\n            /*\n             * TODO: order of enumerated properties in header object is not\n             * guaranteed, see ECMA-262 spec (section 12.6.4)\n             */\n            result.push('[' + i + ' \"' + this._header[i] + '\"]' + newline);\n            headerExists = true;\n        }\n        if (headerExists && this._history.length) {\n            result.push(newline);\n        }\n        const appendComment = (moveString) => {\n            const comment = this._comments[this.fen()];\n            if (typeof comment !== 'undefined') {\n                const delimiter = moveString.length > 0 ? ' ' : '';\n                moveString = `${moveString}${delimiter}{${comment}}`;\n            }\n            return moveString;\n        };\n        // pop all of history onto reversed_history\n        const reversedHistory = [];\n        while (this._history.length > 0) {\n            reversedHistory.push(this._undoMove());\n        }\n        const moves = [];\n        let moveString = '';\n        // special case of a commented starting position with no moves\n        if (reversedHistory.length === 0) {\n            moves.push(appendComment(''));\n        }\n        // build the list of moves.  a move_string looks like: \"3. e3 e6\"\n        while (reversedHistory.length > 0) {\n            moveString = appendComment(moveString);\n            const move = reversedHistory.pop();\n            // make TypeScript stop complaining about move being undefined\n            if (!move) {\n                break;\n            }\n            // if the position started with black to move, start PGN with #. ...\n            if (!this._history.length && move.color === 'b') {\n                const prefix = `${this._moveNumber}. ...`;\n                // is there a comment preceding the first move?\n                moveString = moveString ? `${moveString} ${prefix}` : prefix;\n            }\n            else if (move.color === 'w') {\n                // store the previous generated move_string if we have one\n                if (moveString.length) {\n                    moves.push(moveString);\n                }\n                moveString = this._moveNumber + '.';\n            }\n            moveString =\n                moveString + ' ' + this._moveToSan(move, this._moves({ legal: true }));\n            this._makeMove(move);\n        }\n        // are there any other leftover moves?\n        if (moveString.length) {\n            moves.push(appendComment(moveString));\n        }\n        // is there a result?\n        if (typeof this._header.Result !== 'undefined') {\n            moves.push(this._header.Result);\n        }\n        /*\n         * history should be back to what it was before we started generating PGN,\n         * so join together moves\n         */\n        if (maxWidth === 0) {\n            return result.join('') + moves.join(' ');\n        }\n        // TODO (jah): huh?\n        const strip = function () {\n            if (result.length > 0 && result[result.length - 1] === ' ') {\n                result.pop();\n                return true;\n            }\n            return false;\n        };\n        // NB: this does not preserve comment whitespace.\n        const wrapComment = function (width, move) {\n            for (const token of move.split(' ')) {\n                if (!token) {\n                    continue;\n                }\n                if (width + token.length > maxWidth) {\n                    while (strip()) {\n                        width--;\n                    }\n                    result.push(newline);\n                    width = 0;\n                }\n                result.push(token);\n                width += token.length;\n                result.push(' ');\n                width++;\n            }\n            if (strip()) {\n                width--;\n            }\n            return width;\n        };\n        // wrap the PGN output at max_width\n        let currentWidth = 0;\n        for (let i = 0; i < moves.length; i++) {\n            if (currentWidth + moves[i].length > maxWidth) {\n                if (moves[i].includes('{')) {\n                    currentWidth = wrapComment(currentWidth, moves[i]);\n                    continue;\n                }\n            }\n            // if the current move will push past max_width\n            if (currentWidth + moves[i].length > maxWidth && i !== 0) {\n                // don't end the line with whitespace\n                if (result[result.length - 1] === ' ') {\n                    result.pop();\n                }\n                result.push(newline);\n                currentWidth = 0;\n            }\n            else if (i !== 0) {\n                result.push(' ');\n                currentWidth++;\n            }\n            result.push(moves[i]);\n            currentWidth += moves[i].length;\n        }\n        return result.join('');\n    }\n    header(...args) {\n        for (let i = 0; i < args.length; i += 2) {\n            if (typeof args[i] === 'string' && typeof args[i + 1] === 'string') {\n                this._header[args[i]] = args[i + 1];\n            }\n        }\n        return this._header;\n    }\n    loadPgn(pgn, { strict = false, newlineChar = '\\r?\\n', } = {}) {\n        function mask(str) {\n            return str.replace(/\\\\/g, '\\\\');\n        }\n        function parsePgnHeader(header) {\n            const headerObj = {};\n            const headers = header.split(new RegExp(mask(newlineChar)));\n            let key = '';\n            let value = '';\n            for (let i = 0; i < headers.length; i++) {\n                const regex = /^\\s*\\[\\s*([A-Za-z]+)\\s*\"(.*)\"\\s*\\]\\s*$/;\n                key = headers[i].replace(regex, '$1');\n                value = headers[i].replace(regex, '$2');\n                if (key.trim().length > 0) {\n                    headerObj[key] = value;\n                }\n            }\n            return headerObj;\n        }\n        // strip whitespace from head/tail of PGN block\n        pgn = pgn.trim();\n        /*\n         * RegExp to split header. Takes advantage of the fact that header and movetext\n         * will always have a blank line between them (ie, two newline_char's). Handles\n         * case where movetext is empty by matching newlineChar until end of string is\n         * matched - effectively trimming from the end extra newlineChar.\n         *\n         * With default newline_char, will equal:\n         * /^(\\[((?:\\r?\\n)|.)*\\])((?:\\s*\\r?\\n){2}|(?:\\s*\\r?\\n)*$)/\n         */\n        const headerRegex = new RegExp('^(\\\\[((?:' +\n            mask(newlineChar) +\n            ')|.)*\\\\])' +\n            '((?:\\\\s*' +\n            mask(newlineChar) +\n            '){2}|(?:\\\\s*' +\n            mask(newlineChar) +\n            ')*$)');\n        // If no header given, begin with moves.\n        const headerRegexResults = headerRegex.exec(pgn);\n        const headerString = headerRegexResults\n            ? headerRegexResults.length >= 2\n                ? headerRegexResults[1]\n                : ''\n            : '';\n        // Put the board in the starting position\n        this.reset();\n        // parse PGN header\n        const headers = parsePgnHeader(headerString);\n        let fen = '';\n        for (const key in headers) {\n            // check to see user is including fen (possibly with wrong tag case)\n            if (key.toLowerCase() === 'fen') {\n                fen = headers[key];\n            }\n            this.header(key, headers[key]);\n        }\n        /*\n         * the permissive parser should attempt to load a fen tag, even if it's the\n         * wrong case and doesn't include a corresponding [SetUp \"1\"] tag\n         */\n        if (!strict) {\n            if (fen) {\n                this.load(fen, true);\n            }\n        }\n        else {\n            /*\n             * strict parser - load the starting position indicated by [Setup '1']\n             * and [FEN position]\n             */\n            if (headers['SetUp'] === '1') {\n                if (!('FEN' in headers)) {\n                    throw new Error('Invalid PGN: FEN tag must be supplied with SetUp tag');\n                }\n                // second argument to load: don't clear the headers\n                this.load(headers['FEN'], true);\n            }\n        }\n        /*\n         * NB: the regexes below that delete move numbers, recursive annotations,\n         * and numeric annotation glyphs may also match text in comments. To\n         * prevent this, we transform comments by hex-encoding them in place and\n         * decoding them again after the other tokens have been deleted.\n         *\n         * While the spec states that PGN files should be ASCII encoded, we use\n         * {en,de}codeURIComponent here to support arbitrary UTF8 as a convenience\n         * for modern users\n         */\n        function toHex(s) {\n            return Array.from(s)\n                .map(function (c) {\n                /*\n                 * encodeURI doesn't transform most ASCII characters, so we handle\n                 * these ourselves\n                 */\n                return c.charCodeAt(0) < 128\n                    ? c.charCodeAt(0).toString(16)\n                    : encodeURIComponent(c).replace(/%/g, '').toLowerCase();\n            })\n                .join('');\n        }\n        function fromHex(s) {\n            return s.length == 0\n                ? ''\n                : decodeURIComponent('%' + (s.match(/.{1,2}/g) || []).join('%'));\n        }\n        const encodeComment = function (s) {\n            s = s.replace(new RegExp(mask(newlineChar), 'g'), ' ');\n            return `{${toHex(s.slice(1, s.length - 1))}}`;\n        };\n        const decodeComment = function (s) {\n            if (s.startsWith('{') && s.endsWith('}')) {\n                return fromHex(s.slice(1, s.length - 1));\n            }\n        };\n        // delete header to get the moves\n        let ms = pgn\n            .replace(headerString, '')\n            .replace(\n        // encode comments so they don't get deleted below\n        new RegExp(`({[^}]*})+?|;([^${mask(newlineChar)}]*)`, 'g'), function (_match, bracket, semicolon) {\n            return bracket !== undefined\n                ? encodeComment(bracket)\n                : ' ' + encodeComment(`{${semicolon.slice(1)}}`);\n        })\n            .replace(new RegExp(mask(newlineChar), 'g'), ' ');\n        // delete recursive annotation variations\n        const ravRegex = /(\\([^()]+\\))+?/g;\n        while (ravRegex.test(ms)) {\n            ms = ms.replace(ravRegex, '');\n        }\n        // delete move numbers\n        ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '');\n        // delete ... indicating black to move\n        ms = ms.replace(/\\.\\.\\./g, '');\n        /* delete numeric annotation glyphs */\n        ms = ms.replace(/\\$\\d+/g, '');\n        // trim and get array of moves\n        let moves = ms.trim().split(new RegExp(/\\s+/));\n        // delete empty entries\n        moves = moves.filter((move) => move !== '');\n        let result = '';\n        for (let halfMove = 0; halfMove < moves.length; halfMove++) {\n            const comment = decodeComment(moves[halfMove]);\n            if (comment !== undefined) {\n                this._comments[this.fen()] = comment;\n                continue;\n            }\n            const move = this._moveFromSan(moves[halfMove], strict);\n            // invalid move\n            if (move == null) {\n                // was the move an end of game marker\n                if (TERMINATION_MARKERS.indexOf(moves[halfMove]) > -1) {\n                    result = moves[halfMove];\n                }\n                else {\n                    throw new Error(`Invalid move in PGN: ${moves[halfMove]}`);\n                }\n            }\n            else {\n                // reset the end of game marker if making a valid move\n                result = '';\n                this._makeMove(move);\n            }\n        }\n        /*\n         * Per section 8.2.6 of the PGN spec, the Result tag pair must match match\n         * the termination marker. Only do this when headers are present, but the\n         * result tag is missing\n         */\n        if (result && Object.keys(this._header).length && !this._header['Result']) {\n            this.header('Result', result);\n        }\n    }\n    /*\n     * Convert a move from 0x88 coordinates to Standard Algebraic Notation\n     * (SAN)\n     *\n     * @param {boolean} strict Use the strict SAN parser. It will throw errors\n     * on overly disambiguated moves (see below):\n     *\n     * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n     * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n     * 4. ... Ne7 is technically the valid SAN\n     */\n    _moveToSan(move, moves) {\n        let output = '';\n        if (move.flags & BITS.KSIDE_CASTLE) {\n            output = 'O-O';\n        }\n        else if (move.flags & BITS.QSIDE_CASTLE) {\n            output = 'O-O-O';\n        }\n        else {\n            if (move.piece !== PAWN) {\n                const disambiguator = getDisambiguator(move, moves);\n                output += move.piece.toUpperCase() + disambiguator;\n            }\n            if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n                if (move.piece === PAWN) {\n                    output += algebraic(move.from)[0];\n                }\n                output += 'x';\n            }\n            output += algebraic(move.to);\n            if (move.promotion) {\n                output += '=' + move.promotion.toUpperCase();\n            }\n        }\n        this._makeMove(move);\n        if (this.isCheck()) {\n            if (this.isCheckmate()) {\n                output += '#';\n            }\n            else {\n                output += '+';\n            }\n        }\n        this._undoMove();\n        return output;\n    }\n    // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n    _moveFromSan(move, strict = false) {\n        // strip off any move decorations: e.g Nf3+?! becomes Nf3\n        const cleanMove = strippedSan(move);\n        let pieceType = inferPieceType(cleanMove);\n        let moves = this._moves({ legal: true, piece: pieceType });\n        // strict parser\n        for (let i = 0, len = moves.length; i < len; i++) {\n            if (cleanMove === strippedSan(this._moveToSan(moves[i], moves))) {\n                return moves[i];\n            }\n        }\n        // the strict parser failed\n        if (strict) {\n            return null;\n        }\n        let piece = undefined;\n        let matches = undefined;\n        let from = undefined;\n        let to = undefined;\n        let promotion = undefined;\n        /*\n         * The default permissive (non-strict) parser allows the user to parse\n         * non-standard chess notations. This parser is only run after the strict\n         * Standard Algebraic Notation (SAN) parser has failed.\n         *\n         * When running the permissive parser, we'll run a regex to grab the piece, the\n         * to/from square, and an optional promotion piece. This regex will\n         * parse common non-standard notation like: Pe2-e4, Rc1c4, Qf3xf7,\n         * f7f8q, b1c3\n         *\n         * NOTE: Some positions and moves may be ambiguous when using the permissive\n         * parser. For example, in this position: 6k1/8/8/B7/8/8/8/BN4K1 w - - 0 1,\n         * the move b1c3 may be interpreted as Nc3 or B1c3 (a disambiguated bishop\n         * move). In these cases, the permissive parser will default to the most\n         * basic interpretation (which is b1c3 parsing to Nc3).\n         */\n        let overlyDisambiguated = false;\n        matches = cleanMove.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/\n        //     piece         from              to       promotion\n        );\n        if (matches) {\n            piece = matches[1];\n            from = matches[2];\n            to = matches[3];\n            promotion = matches[4];\n            if (from.length == 1) {\n                overlyDisambiguated = true;\n            }\n        }\n        else {\n            /*\n             * The [a-h]?[1-8]? portion of the regex below handles moves that may be\n             * overly disambiguated (e.g. Nge7 is unnecessary and non-standard when\n             * there is one legal knight move to e7). In this case, the value of\n             * 'from' variable will be a rank or file, not a square.\n             */\n            matches = cleanMove.match(/([pnbrqkPNBRQK])?([a-h]?[1-8]?)x?-?([a-h][1-8])([qrbnQRBN])?/);\n            if (matches) {\n                piece = matches[1];\n                from = matches[2];\n                to = matches[3];\n                promotion = matches[4];\n                if (from.length == 1) {\n                    overlyDisambiguated = true;\n                }\n            }\n        }\n        pieceType = inferPieceType(cleanMove);\n        moves = this._moves({\n            legal: true,\n            piece: piece ? piece : pieceType,\n        });\n        for (let i = 0, len = moves.length; i < len; i++) {\n            if (from && to) {\n                // hand-compare move properties with the results from our permissive regex\n                if ((!piece || piece.toLowerCase() == moves[i].piece) &&\n                    Ox88[from] == moves[i].from &&\n                    Ox88[to] == moves[i].to &&\n                    (!promotion || promotion.toLowerCase() == moves[i].promotion)) {\n                    return moves[i];\n                }\n                else if (overlyDisambiguated) {\n                    /*\n                     * SPECIAL CASE: we parsed a move string that may have an unneeded\n                     * rank/file disambiguator (e.g. Nge7).  The 'from' variable will\n                     */\n                    const square = algebraic(moves[i].from);\n                    if ((!piece || piece.toLowerCase() == moves[i].piece) &&\n                        Ox88[to] == moves[i].to &&\n                        (from == square[0] || from == square[1]) &&\n                        (!promotion || promotion.toLowerCase() == moves[i].promotion)) {\n                        return moves[i];\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    ascii() {\n        let s = '   +------------------------+\\n';\n        for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n            // display the rank\n            if (file(i) === 0) {\n                s += ' ' + '87654321'[rank(i)] + ' |';\n            }\n            if (this._board[i]) {\n                const piece = this._board[i].type;\n                const color = this._board[i].color;\n                const symbol = color === WHITE ? piece.toUpperCase() : piece.toLowerCase();\n                s += ' ' + symbol + ' ';\n            }\n            else {\n                s += ' . ';\n            }\n            if ((i + 1) & 0x88) {\n                s += '|\\n';\n                i += 8;\n            }\n        }\n        s += '   +------------------------+\\n';\n        s += '     a  b  c  d  e  f  g  h';\n        return s;\n    }\n    perft(depth) {\n        const moves = this._moves({ legal: false });\n        let nodes = 0;\n        const color = this._turn;\n        for (let i = 0, len = moves.length; i < len; i++) {\n            this._makeMove(moves[i]);\n            if (!this._isKingAttacked(color)) {\n                if (depth - 1 > 0) {\n                    nodes += this.perft(depth - 1);\n                }\n                else {\n                    nodes++;\n                }\n            }\n            this._undoMove();\n        }\n        return nodes;\n    }\n    // pretty = external move object\n    _makePretty(uglyMove) {\n        const { color, piece, from, to, flags, captured, promotion } = uglyMove;\n        let prettyFlags = '';\n        for (const flag in BITS) {\n            if (BITS[flag] & flags) {\n                prettyFlags += FLAGS[flag];\n            }\n        }\n        const fromAlgebraic = algebraic(from);\n        const toAlgebraic = algebraic(to);\n        const move = {\n            color,\n            piece,\n            from: fromAlgebraic,\n            to: toAlgebraic,\n            san: this._moveToSan(uglyMove, this._moves({ legal: true })),\n            flags: prettyFlags,\n            lan: fromAlgebraic + toAlgebraic,\n            before: this.fen(),\n            after: '',\n        };\n        // generate the FEN for the 'after' key\n        this._makeMove(uglyMove);\n        move.after = this.fen();\n        this._undoMove();\n        if (captured) {\n            move.captured = captured;\n        }\n        if (promotion) {\n            move.promotion = promotion;\n            move.lan += promotion;\n        }\n        return move;\n    }\n    turn() {\n        return this._turn;\n    }\n    board() {\n        const output = [];\n        let row = [];\n        for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n            if (this._board[i] == null) {\n                row.push(null);\n            }\n            else {\n                row.push({\n                    square: algebraic(i),\n                    type: this._board[i].type,\n                    color: this._board[i].color,\n                });\n            }\n            if ((i + 1) & 0x88) {\n                output.push(row);\n                row = [];\n                i += 8;\n            }\n        }\n        return output;\n    }\n    squareColor(square) {\n        if (square in Ox88) {\n            const sq = Ox88[square];\n            return (rank(sq) + file(sq)) % 2 === 0 ? 'light' : 'dark';\n        }\n        return null;\n    }\n    history({ verbose = false } = {}) {\n        const reversedHistory = [];\n        const moveHistory = [];\n        while (this._history.length > 0) {\n            reversedHistory.push(this._undoMove());\n        }\n        while (true) {\n            const move = reversedHistory.pop();\n            if (!move) {\n                break;\n            }\n            if (verbose) {\n                moveHistory.push(this._makePretty(move));\n            }\n            else {\n                moveHistory.push(this._moveToSan(move, this._moves()));\n            }\n            this._makeMove(move);\n        }\n        return moveHistory;\n    }\n    _pruneComments() {\n        const reversedHistory = [];\n        const currentComments = {};\n        const copyComment = (fen) => {\n            if (fen in this._comments) {\n                currentComments[fen] = this._comments[fen];\n            }\n        };\n        while (this._history.length > 0) {\n            reversedHistory.push(this._undoMove());\n        }\n        copyComment(this.fen());\n        while (true) {\n            const move = reversedHistory.pop();\n            if (!move) {\n                break;\n            }\n            this._makeMove(move);\n            copyComment(this.fen());\n        }\n        this._comments = currentComments;\n    }\n    getComment() {\n        return this._comments[this.fen()];\n    }\n    setComment(comment) {\n        this._comments[this.fen()] = comment.replace('{', '[').replace('}', ']');\n    }\n    deleteComment() {\n        const comment = this._comments[this.fen()];\n        delete this._comments[this.fen()];\n        return comment;\n    }\n    getComments() {\n        this._pruneComments();\n        return Object.keys(this._comments).map((fen) => {\n            return { fen: fen, comment: this._comments[fen] };\n        });\n    }\n    deleteComments() {\n        this._pruneComments();\n        return Object.keys(this._comments).map((fen) => {\n            const comment = this._comments[fen];\n            delete this._comments[fen];\n            return { fen: fen, comment: comment };\n        });\n    }\n}\n\nfunction chessSquareToText(square) {\n    return [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"][square.file] + (8 - square.row);\n}\n\nclass ChessBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this._chess = new Chess();\n        this.promotionMenu = React.createRef();\n        this.state = {\n            pieces: Array(8).fill([]),\n            recent: []\n        };\n        this.onClick = this.onClick.bind(this);\n        this.onMove = this.onMove.bind(this);\n        this.getLegalMoves = this.getLegalMoves.bind(this);\n        this.inCheck = this.inCheck.bind(this);\n        this.getTurn = this.getTurn.bind(this);\n    }\n    render() {\n        return (jsxs(\"div\", Object.assign({ style: {\n                width: '100%',\n                aspectRatio: '1/1',\n            }, onClick: this.onClick }, { children: [jsx(ChessBoardSquares, { pieces: this.state.pieces, onMove: this.onMove, getLegalMoves: this.getLegalMoves, inCheck: this.inCheck, getTurn: this.getTurn, recent: this.state.recent }), jsx(ChessBoardPromotionMenu, { ref: this.promotionMenu })] })));\n    }\n    onClick() {\n    }\n    updatePieces() {\n        this.setState({\n            pieces: this._chess.board().map(row => {\n                return row.map(piece => {\n                    if (piece == null)\n                        return undefined;\n                    return {\n                        color: piece.color == \"w\" ? ChessColor.WHITE : ChessColor.BLACK,\n                        type: [\"p\", \"n\", \"b\", \"r\", \"q\", \"k\"].indexOf(piece.type)\n                    };\n                });\n            })\n        });\n    }\n    componentDidMount() {\n        this.updatePieces();\n    }\n    onMove(move) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            var promotionTo = undefined;\n            if (((_a = this.state.pieces[move.from.row][move.from.file]) === null || _a === void 0 ? void 0 : _a.type) == ChessPieceType.PAWN) {\n                if (((_b = this.state.pieces[move.from.row][move.from.file]) === null || _b === void 0 ? void 0 : _b.color) == ChessColor.WHITE && move.to.row == 0) {\n                    // White pawn promotion\n                    if (this.promotionMenu.current) {\n                        promotionTo = yield this.promotionMenu.current.openAsync(ChessColor.WHITE, move.to.file);\n                        if (!promotionTo)\n                            return;\n                    }\n                }\n                if (((_c = this.state.pieces[move.from.row][move.from.file]) === null || _c === void 0 ? void 0 : _c.color) == ChessColor.BLACK && move.to.row == 7) {\n                    // Black pawn promotion\n                    if (this.promotionMenu.current) {\n                        promotionTo = yield this.promotionMenu.current.openAsync(ChessColor.BLACK, move.to.file);\n                        if (!promotionTo)\n                            return;\n                    }\n                }\n            }\n            try {\n                this._chess.move({\n                    from: chessSquareToText(move.from),\n                    to: chessSquareToText(move.to),\n                    promotion: typeof promotionTo == 'number' ? [\"p\", \"n\", \"b\", \"r\", \"q\", \"k\"][promotionTo] : undefined\n                });\n                this.setState({\n                    recent: [move.from, move.to]\n                });\n            }\n            catch (e) {\n                // Invalid move, just ignore it\n                return;\n            }\n            this.updatePieces();\n        });\n    }\n    getLegalMoves(square) {\n        return this._chess.moves({ square: chessSquareToText(square), verbose: true }).map(move => {\n            return {\n                row: 8 - parseInt(move.to[1]),\n                file: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"].indexOf(move.to[0])\n            };\n        });\n    }\n    inCheck() {\n        return this._chess.inCheck();\n    }\n    getTurn() {\n        return this._chess.turn() == \"w\" ? ChessColor.WHITE : ChessColor.BLACK;\n    }\n}\n\nexport { ChessBoard };\n","import React from 'react';\n\nimport { ChessBoard } from '@hahalosah/react-chess-board'\n\nexport class App extends React.Component {\n    render() {\n        return (\n            <div>\n                <div style={{\n                    width: '40vw',\n                    filter: 'drop-shadow(0 0 0.5rem #000)',\n                    // now center it vertically\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)'\n                }}>\n                    <ChessBoard />\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport { App } from './App.jsx';\n\nconst root = createRoot(document.getElementById('app'));\n\nroot.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","reject","fulfilled","step","e","rejected","result","Staunty","jsxs","jsx","ChessPieceIcon","React","ChessBoardSquare","props","ChessColor","ChessPieceType","getElementPosition","element","box","scrollTop","scrollLeft","clientTop","clientLeft","top","left","ChessBoardSquares","inCheck","_","i","_a","_b","row","file","selected","destination","valid","square","piece","underAttack","recent","draggedChessPiece","boardPosition","ChessBoardPromotionMenu","callback","color","WHITE","BLACK","PAWN","KNIGHT","BISHOP","ROOK","QUEEN","KING","DEFAULT_POSITION","EMPTY","FLAGS","BITS","Ox88","PAWN_OFFSETS","PIECE_OFFSETS","ATTACKS","RAYS","PIECE_MASKS","SYMBOLS","PROMOTIONS","RANK_1","RANK_2","RANK_7","RANK_8","ROOKS","SECOND_RANK","TERMINATION_MARKERS","rank","isDigit","c","algebraic","f","r","swapColor","validateFen","fen","tokens","moveNumber","halfMoves","rows","sumFields","previousWasNumber","k","kings","regex","getDisambiguator","move","moves","from","to","ambiguities","sameRank","sameFile","len","ambigFrom","ambigTo","ambigPiece","addMove","captured","flags","promotion","inferPieceType","san","pieceType","strippedSan","Chess","_board","_turn","_header","_kings","_epSquare","_halfMoves","_moveNumber","_history","_comments","_castling","keepHeaders","_updateSetup","adjustments","ok","error","position","empty","castling","epSquare","bigPawnSquare","squares","_makeMove","isLegal","_isKingAttacked","_undoMove","type","sq","_attacked","difference","index","offset","j","blocked","attackedBy","_moves","pieces","bishops","numPieces","squareColor","sum","positions","repetition","verbose","_makePretty","_moveToSan","legal","forSquare","forPiece","us","them","firstSquare","lastSquare","singleSquare","castlingFrom","castlingTo","legalMoves","strict","moveObj","_moveFromSan","prettyMove","_push","old","newline","maxWidth","headerExists","appendComment","moveString","comment","delimiter","reversedHistory","prefix","strip","wrapComment","width","token","currentWidth","args","pgn","newlineChar","mask","str","parsePgnHeader","header","headerObj","headers","key","headerRegexResults","headerString","toHex","s","fromHex","encodeComment","decodeComment","ms","_match","bracket","semicolon","ravRegex","halfMove","output","disambiguator","cleanMove","matches","overlyDisambiguated","symbol","depth","nodes","uglyMove","prettyFlags","flag","fromAlgebraic","toAlgebraic","moveHistory","_pruneComments","currentComments","copyComment","chessSquareToText","ChessBoard","_chess","_c","promotionTo","App","root","createRoot"],"mappings":"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AG,EAAG,GAAI,EAChD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAChD,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAChD,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAChD,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAChD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAChD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAChD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3D,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAChD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAChD,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAChD,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAChD,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAChD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAChD,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAChD,EAEMC,GAAO,CACT,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,G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"}